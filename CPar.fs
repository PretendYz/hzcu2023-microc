// Implementation file for parser generated by fsyacc
module CPar
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "CPar.fsy"

(*	File MicroC/CPar.fsy 
	Parser specification for micro-C, a small imperative language
	sestoft@itu.dk * 2009-09-29
	No (real) shift/reduce conflicts thanks to Niels Kokholm.
*)
open Absyn

// Vardesc 返回的是一个 元组 (g,s)
// g是类型构造函数，s是变量名
// compose1 函数 取出 类型构造子 g，用类型复合机制构造类型。

let compose1 f (g, s) = ((fun x -> g(f(x))), s)
let nl = CstI 10 //  \n 的 ASCII 码

# 22 "CPar.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | PLUS_ASSIGN
  | MINUS_ASSIGN
  | TIMES_ASSIGN
  | DIV_ASSIGN
  | MOD_ASSIGN
  | SIZEOF
  | TYPEOF
  | INC
  | DESC
  | QUE
  | COLON
  | SWITCH
  | CASE
  | DEFAULT
  | LPAR
  | RPAR
  | LBRACE
  | RBRACE
  | LBRACK
  | RBRACK
  | SEMI
  | COMMA
  | ASSIGN
  | AMP
  | NOT
  | SEQOR
  | SEQAND
  | EQ
  | NE
  | GT
  | LT
  | GE
  | LE
  | PLUS
  | MINUS
  | TIMES
  | DIV
  | MOD
  | CHAR
  | ELSE
  | IF
  | INT
  | FLOAT
  | BOOL
  | STRING
  | NULL
  | PRINT
  | PRINTLN
  | RETURN
  | VOID
  | WHILE
  | FOR
  | DO
  | UNTIL
  | BREAK
  | CONTINUE
  | CSTSTRING of (string)
  | NAME of (string)
  | CSTBOOL of (bool)
  | CSTFLOAT of (float32)
  | CSTINT of (int)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_PLUS_ASSIGN
    | TOKEN_MINUS_ASSIGN
    | TOKEN_TIMES_ASSIGN
    | TOKEN_DIV_ASSIGN
    | TOKEN_MOD_ASSIGN
    | TOKEN_SIZEOF
    | TOKEN_TYPEOF
    | TOKEN_INC
    | TOKEN_DESC
    | TOKEN_QUE
    | TOKEN_COLON
    | TOKEN_SWITCH
    | TOKEN_CASE
    | TOKEN_DEFAULT
    | TOKEN_LPAR
    | TOKEN_RPAR
    | TOKEN_LBRACE
    | TOKEN_RBRACE
    | TOKEN_LBRACK
    | TOKEN_RBRACK
    | TOKEN_SEMI
    | TOKEN_COMMA
    | TOKEN_ASSIGN
    | TOKEN_AMP
    | TOKEN_NOT
    | TOKEN_SEQOR
    | TOKEN_SEQAND
    | TOKEN_EQ
    | TOKEN_NE
    | TOKEN_GT
    | TOKEN_LT
    | TOKEN_GE
    | TOKEN_LE
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_TIMES
    | TOKEN_DIV
    | TOKEN_MOD
    | TOKEN_CHAR
    | TOKEN_ELSE
    | TOKEN_IF
    | TOKEN_INT
    | TOKEN_FLOAT
    | TOKEN_BOOL
    | TOKEN_STRING
    | TOKEN_NULL
    | TOKEN_PRINT
    | TOKEN_PRINTLN
    | TOKEN_RETURN
    | TOKEN_VOID
    | TOKEN_WHILE
    | TOKEN_FOR
    | TOKEN_DO
    | TOKEN_UNTIL
    | TOKEN_BREAK
    | TOKEN_CONTINUE
    | TOKEN_CSTSTRING
    | TOKEN_NAME
    | TOKEN_CSTBOOL
    | TOKEN_CSTFLOAT
    | TOKEN_CSTINT
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startMain
    | NONTERM_Main
    | NONTERM_Topdecs
    | NONTERM_Topdec
    | NONTERM_Vardec
    | NONTERM_Vardesc
    | NONTERM_Fundec
    | NONTERM_Paramdecs
    | NONTERM_Paramdecs1
    | NONTERM_Block
    | NONTERM_StmtOrDecSeq
    | NONTERM_Stmt
    | NONTERM_StmtM
    | NONTERM_StmtU
    | NONTERM_Expr
    | NONTERM_ExprNotAccess
    | NONTERM_AtExprNotAccess
    | NONTERM_Access
    | NONTERM_Exprs
    | NONTERM_Exprs1
    | NONTERM_StmtCase
    | NONTERM_ConstBool
    | NONTERM_ConstInt
    | NONTERM_ConstString
    | NONTERM_ConstFloat
    | NONTERM_Type

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | PLUS_ASSIGN  -> 1 
  | MINUS_ASSIGN  -> 2 
  | TIMES_ASSIGN  -> 3 
  | DIV_ASSIGN  -> 4 
  | MOD_ASSIGN  -> 5 
  | SIZEOF  -> 6 
  | TYPEOF  -> 7 
  | INC  -> 8 
  | DESC  -> 9 
  | QUE  -> 10 
  | COLON  -> 11 
  | SWITCH  -> 12 
  | CASE  -> 13 
  | DEFAULT  -> 14 
  | LPAR  -> 15 
  | RPAR  -> 16 
  | LBRACE  -> 17 
  | RBRACE  -> 18 
  | LBRACK  -> 19 
  | RBRACK  -> 20 
  | SEMI  -> 21 
  | COMMA  -> 22 
  | ASSIGN  -> 23 
  | AMP  -> 24 
  | NOT  -> 25 
  | SEQOR  -> 26 
  | SEQAND  -> 27 
  | EQ  -> 28 
  | NE  -> 29 
  | GT  -> 30 
  | LT  -> 31 
  | GE  -> 32 
  | LE  -> 33 
  | PLUS  -> 34 
  | MINUS  -> 35 
  | TIMES  -> 36 
  | DIV  -> 37 
  | MOD  -> 38 
  | CHAR  -> 39 
  | ELSE  -> 40 
  | IF  -> 41 
  | INT  -> 42 
  | FLOAT  -> 43 
  | BOOL  -> 44 
  | STRING  -> 45 
  | NULL  -> 46 
  | PRINT  -> 47 
  | PRINTLN  -> 48 
  | RETURN  -> 49 
  | VOID  -> 50 
  | WHILE  -> 51 
  | FOR  -> 52 
  | DO  -> 53 
  | UNTIL  -> 54 
  | BREAK  -> 55 
  | CONTINUE  -> 56 
  | CSTSTRING _ -> 57 
  | NAME _ -> 58 
  | CSTBOOL _ -> 59 
  | CSTFLOAT _ -> 60 
  | CSTINT _ -> 61 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_PLUS_ASSIGN 
  | 2 -> TOKEN_MINUS_ASSIGN 
  | 3 -> TOKEN_TIMES_ASSIGN 
  | 4 -> TOKEN_DIV_ASSIGN 
  | 5 -> TOKEN_MOD_ASSIGN 
  | 6 -> TOKEN_SIZEOF 
  | 7 -> TOKEN_TYPEOF 
  | 8 -> TOKEN_INC 
  | 9 -> TOKEN_DESC 
  | 10 -> TOKEN_QUE 
  | 11 -> TOKEN_COLON 
  | 12 -> TOKEN_SWITCH 
  | 13 -> TOKEN_CASE 
  | 14 -> TOKEN_DEFAULT 
  | 15 -> TOKEN_LPAR 
  | 16 -> TOKEN_RPAR 
  | 17 -> TOKEN_LBRACE 
  | 18 -> TOKEN_RBRACE 
  | 19 -> TOKEN_LBRACK 
  | 20 -> TOKEN_RBRACK 
  | 21 -> TOKEN_SEMI 
  | 22 -> TOKEN_COMMA 
  | 23 -> TOKEN_ASSIGN 
  | 24 -> TOKEN_AMP 
  | 25 -> TOKEN_NOT 
  | 26 -> TOKEN_SEQOR 
  | 27 -> TOKEN_SEQAND 
  | 28 -> TOKEN_EQ 
  | 29 -> TOKEN_NE 
  | 30 -> TOKEN_GT 
  | 31 -> TOKEN_LT 
  | 32 -> TOKEN_GE 
  | 33 -> TOKEN_LE 
  | 34 -> TOKEN_PLUS 
  | 35 -> TOKEN_MINUS 
  | 36 -> TOKEN_TIMES 
  | 37 -> TOKEN_DIV 
  | 38 -> TOKEN_MOD 
  | 39 -> TOKEN_CHAR 
  | 40 -> TOKEN_ELSE 
  | 41 -> TOKEN_IF 
  | 42 -> TOKEN_INT 
  | 43 -> TOKEN_FLOAT 
  | 44 -> TOKEN_BOOL 
  | 45 -> TOKEN_STRING 
  | 46 -> TOKEN_NULL 
  | 47 -> TOKEN_PRINT 
  | 48 -> TOKEN_PRINTLN 
  | 49 -> TOKEN_RETURN 
  | 50 -> TOKEN_VOID 
  | 51 -> TOKEN_WHILE 
  | 52 -> TOKEN_FOR 
  | 53 -> TOKEN_DO 
  | 54 -> TOKEN_UNTIL 
  | 55 -> TOKEN_BREAK 
  | 56 -> TOKEN_CONTINUE 
  | 57 -> TOKEN_CSTSTRING 
  | 58 -> TOKEN_NAME 
  | 59 -> TOKEN_CSTBOOL 
  | 60 -> TOKEN_CSTFLOAT 
  | 61 -> TOKEN_CSTINT 
  | 64 -> TOKEN_end_of_input
  | 62 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startMain 
    | 1 -> NONTERM_Main 
    | 2 -> NONTERM_Topdecs 
    | 3 -> NONTERM_Topdecs 
    | 4 -> NONTERM_Topdec 
    | 5 -> NONTERM_Topdec 
    | 6 -> NONTERM_Vardec 
    | 7 -> NONTERM_Vardesc 
    | 8 -> NONTERM_Vardesc 
    | 9 -> NONTERM_Vardesc 
    | 10 -> NONTERM_Vardesc 
    | 11 -> NONTERM_Vardesc 
    | 12 -> NONTERM_Fundec 
    | 13 -> NONTERM_Fundec 
    | 14 -> NONTERM_Paramdecs 
    | 15 -> NONTERM_Paramdecs 
    | 16 -> NONTERM_Paramdecs1 
    | 17 -> NONTERM_Paramdecs1 
    | 18 -> NONTERM_Block 
    | 19 -> NONTERM_StmtOrDecSeq 
    | 20 -> NONTERM_StmtOrDecSeq 
    | 21 -> NONTERM_StmtOrDecSeq 
    | 22 -> NONTERM_Stmt 
    | 23 -> NONTERM_Stmt 
    | 24 -> NONTERM_StmtM 
    | 25 -> NONTERM_StmtM 
    | 26 -> NONTERM_StmtM 
    | 27 -> NONTERM_StmtM 
    | 28 -> NONTERM_StmtM 
    | 29 -> NONTERM_StmtM 
    | 30 -> NONTERM_StmtM 
    | 31 -> NONTERM_StmtM 
    | 32 -> NONTERM_StmtM 
    | 33 -> NONTERM_StmtM 
    | 34 -> NONTERM_StmtM 
    | 35 -> NONTERM_StmtM 
    | 36 -> NONTERM_StmtU 
    | 37 -> NONTERM_StmtU 
    | 38 -> NONTERM_StmtU 
    | 39 -> NONTERM_StmtU 
    | 40 -> NONTERM_StmtU 
    | 41 -> NONTERM_Expr 
    | 42 -> NONTERM_Expr 
    | 43 -> NONTERM_ExprNotAccess 
    | 44 -> NONTERM_ExprNotAccess 
    | 45 -> NONTERM_ExprNotAccess 
    | 46 -> NONTERM_ExprNotAccess 
    | 47 -> NONTERM_ExprNotAccess 
    | 48 -> NONTERM_ExprNotAccess 
    | 49 -> NONTERM_ExprNotAccess 
    | 50 -> NONTERM_ExprNotAccess 
    | 51 -> NONTERM_ExprNotAccess 
    | 52 -> NONTERM_ExprNotAccess 
    | 53 -> NONTERM_ExprNotAccess 
    | 54 -> NONTERM_ExprNotAccess 
    | 55 -> NONTERM_ExprNotAccess 
    | 56 -> NONTERM_ExprNotAccess 
    | 57 -> NONTERM_ExprNotAccess 
    | 58 -> NONTERM_ExprNotAccess 
    | 59 -> NONTERM_ExprNotAccess 
    | 60 -> NONTERM_ExprNotAccess 
    | 61 -> NONTERM_ExprNotAccess 
    | 62 -> NONTERM_ExprNotAccess 
    | 63 -> NONTERM_ExprNotAccess 
    | 64 -> NONTERM_ExprNotAccess 
    | 65 -> NONTERM_ExprNotAccess 
    | 66 -> NONTERM_ExprNotAccess 
    | 67 -> NONTERM_ExprNotAccess 
    | 68 -> NONTERM_ExprNotAccess 
    | 69 -> NONTERM_ExprNotAccess 
    | 70 -> NONTERM_ExprNotAccess 
    | 71 -> NONTERM_ExprNotAccess 
    | 72 -> NONTERM_ExprNotAccess 
    | 73 -> NONTERM_AtExprNotAccess 
    | 74 -> NONTERM_AtExprNotAccess 
    | 75 -> NONTERM_AtExprNotAccess 
    | 76 -> NONTERM_AtExprNotAccess 
    | 77 -> NONTERM_AtExprNotAccess 
    | 78 -> NONTERM_AtExprNotAccess 
    | 79 -> NONTERM_Access 
    | 80 -> NONTERM_Access 
    | 81 -> NONTERM_Access 
    | 82 -> NONTERM_Access 
    | 83 -> NONTERM_Access 
    | 84 -> NONTERM_Exprs 
    | 85 -> NONTERM_Exprs 
    | 86 -> NONTERM_Exprs1 
    | 87 -> NONTERM_Exprs1 
    | 88 -> NONTERM_StmtCase 
    | 89 -> NONTERM_StmtCase 
    | 90 -> NONTERM_StmtCase 
    | 91 -> NONTERM_ConstBool 
    | 92 -> NONTERM_ConstInt 
    | 93 -> NONTERM_ConstInt 
    | 94 -> NONTERM_ConstInt 
    | 95 -> NONTERM_ConstString 
    | 96 -> NONTERM_ConstFloat 
    | 97 -> NONTERM_ConstFloat 
    | 98 -> NONTERM_Type 
    | 99 -> NONTERM_Type 
    | 100 -> NONTERM_Type 
    | 101 -> NONTERM_Type 
    | 102 -> NONTERM_Type 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 64 
let _fsyacc_tagOfErrorTerminal = 62

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | PLUS_ASSIGN  -> "PLUS_ASSIGN" 
  | MINUS_ASSIGN  -> "MINUS_ASSIGN" 
  | TIMES_ASSIGN  -> "TIMES_ASSIGN" 
  | DIV_ASSIGN  -> "DIV_ASSIGN" 
  | MOD_ASSIGN  -> "MOD_ASSIGN" 
  | SIZEOF  -> "SIZEOF" 
  | TYPEOF  -> "TYPEOF" 
  | INC  -> "INC" 
  | DESC  -> "DESC" 
  | QUE  -> "QUE" 
  | COLON  -> "COLON" 
  | SWITCH  -> "SWITCH" 
  | CASE  -> "CASE" 
  | DEFAULT  -> "DEFAULT" 
  | LPAR  -> "LPAR" 
  | RPAR  -> "RPAR" 
  | LBRACE  -> "LBRACE" 
  | RBRACE  -> "RBRACE" 
  | LBRACK  -> "LBRACK" 
  | RBRACK  -> "RBRACK" 
  | SEMI  -> "SEMI" 
  | COMMA  -> "COMMA" 
  | ASSIGN  -> "ASSIGN" 
  | AMP  -> "AMP" 
  | NOT  -> "NOT" 
  | SEQOR  -> "SEQOR" 
  | SEQAND  -> "SEQAND" 
  | EQ  -> "EQ" 
  | NE  -> "NE" 
  | GT  -> "GT" 
  | LT  -> "LT" 
  | GE  -> "GE" 
  | LE  -> "LE" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | TIMES  -> "TIMES" 
  | DIV  -> "DIV" 
  | MOD  -> "MOD" 
  | CHAR  -> "CHAR" 
  | ELSE  -> "ELSE" 
  | IF  -> "IF" 
  | INT  -> "INT" 
  | FLOAT  -> "FLOAT" 
  | BOOL  -> "BOOL" 
  | STRING  -> "STRING" 
  | NULL  -> "NULL" 
  | PRINT  -> "PRINT" 
  | PRINTLN  -> "PRINTLN" 
  | RETURN  -> "RETURN" 
  | VOID  -> "VOID" 
  | WHILE  -> "WHILE" 
  | FOR  -> "FOR" 
  | DO  -> "DO" 
  | UNTIL  -> "UNTIL" 
  | BREAK  -> "BREAK" 
  | CONTINUE  -> "CONTINUE" 
  | CSTSTRING _ -> "CSTSTRING" 
  | NAME _ -> "NAME" 
  | CSTBOOL _ -> "CSTBOOL" 
  | CSTFLOAT _ -> "CSTFLOAT" 
  | CSTINT _ -> "CSTINT" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | PLUS_ASSIGN  -> (null : System.Object) 
  | MINUS_ASSIGN  -> (null : System.Object) 
  | TIMES_ASSIGN  -> (null : System.Object) 
  | DIV_ASSIGN  -> (null : System.Object) 
  | MOD_ASSIGN  -> (null : System.Object) 
  | SIZEOF  -> (null : System.Object) 
  | TYPEOF  -> (null : System.Object) 
  | INC  -> (null : System.Object) 
  | DESC  -> (null : System.Object) 
  | QUE  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | SWITCH  -> (null : System.Object) 
  | CASE  -> (null : System.Object) 
  | DEFAULT  -> (null : System.Object) 
  | LPAR  -> (null : System.Object) 
  | RPAR  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | SEMI  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | ASSIGN  -> (null : System.Object) 
  | AMP  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | SEQOR  -> (null : System.Object) 
  | SEQAND  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | NE  -> (null : System.Object) 
  | GT  -> (null : System.Object) 
  | LT  -> (null : System.Object) 
  | GE  -> (null : System.Object) 
  | LE  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | TIMES  -> (null : System.Object) 
  | DIV  -> (null : System.Object) 
  | MOD  -> (null : System.Object) 
  | CHAR  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | INT  -> (null : System.Object) 
  | FLOAT  -> (null : System.Object) 
  | BOOL  -> (null : System.Object) 
  | STRING  -> (null : System.Object) 
  | NULL  -> (null : System.Object) 
  | PRINT  -> (null : System.Object) 
  | PRINTLN  -> (null : System.Object) 
  | RETURN  -> (null : System.Object) 
  | VOID  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | DO  -> (null : System.Object) 
  | UNTIL  -> (null : System.Object) 
  | BREAK  -> (null : System.Object) 
  | CONTINUE  -> (null : System.Object) 
  | CSTSTRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTBOOL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTFLOAT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 2us; 65535us; 0us; 2us; 4us; 5us; 2us; 65535us; 0us; 4us; 4us; 4us; 8us; 65535us; 0us; 6us; 4us; 6us; 25us; 34us; 29us; 34us; 35us; 34us; 37us; 42us; 40us; 42us; 43us; 42us; 4us; 65535us; 9us; 11us; 10us; 11us; 14us; 15us; 16us; 17us; 2us; 65535us; 0us; 8us; 4us; 8us; 2us; 65535us; 25us; 26us; 29us; 30us; 3us; 65535us; 25us; 33us; 29us; 33us; 35us; 36us; 17us; 65535us; 27us; 28us; 31us; 32us; 37us; 54us; 40us; 54us; 43us; 54us; 61us; 54us; 62us; 54us; 64us; 54us; 65us; 54us; 73us; 54us; 74us; 54us; 76us; 54us; 77us; 54us; 113us; 54us; 114us; 54us; 226us; 54us; 229us; 54us; 3us; 65535us; 37us; 38us; 40us; 41us; 43us; 44us; 4us; 65535us; 37us; 40us; 40us; 40us; 43us; 40us; 62us; 125us; 15us; 65535us; 37us; 45us; 40us; 45us; 43us; 45us; 61us; 63us; 62us; 46us; 64us; 66us; 65us; 66us; 73us; 75us; 74us; 75us; 76us; 78us; 77us; 79us; 113us; 115us; 114us; 116us; 226us; 227us; 229us; 230us; 6us; 65535us; 37us; 47us; 40us; 47us; 43us; 47us; 62us; 47us; 65us; 124us; 74us; 126us; 59us; 65535us; 37us; 48us; 40us; 48us; 43us; 48us; 50us; 52us; 57us; 60us; 58us; 59us; 61us; 48us; 62us; 48us; 64us; 48us; 65us; 48us; 69us; 72us; 70us; 71us; 73us; 48us; 74us; 48us; 76us; 48us; 77us; 48us; 82us; 85us; 83us; 84us; 91us; 92us; 101us; 104us; 102us; 103us; 105us; 108us; 106us; 107us; 109us; 112us; 110us; 111us; 113us; 48us; 114us; 48us; 118us; 119us; 133us; 134us; 136us; 137us; 139us; 176us; 142us; 143us; 147us; 148us; 177us; 154us; 178us; 155us; 179us; 156us; 180us; 157us; 181us; 158us; 182us; 159us; 183us; 160us; 184us; 161us; 185us; 162us; 186us; 163us; 187us; 164us; 188us; 165us; 189us; 166us; 190us; 167us; 191us; 168us; 192us; 169us; 193us; 170us; 194us; 171us; 201us; 172us; 202us; 174us; 207us; 173us; 208us; 173us; 219us; 175us; 222us; 176us; 226us; 48us; 229us; 48us; 59us; 65535us; 37us; 129us; 40us; 129us; 43us; 129us; 50us; 129us; 57us; 129us; 58us; 129us; 61us; 129us; 62us; 129us; 64us; 129us; 65us; 129us; 69us; 129us; 70us; 129us; 73us; 129us; 74us; 129us; 76us; 129us; 77us; 129us; 82us; 129us; 83us; 129us; 91us; 129us; 101us; 129us; 102us; 129us; 105us; 129us; 106us; 129us; 109us; 129us; 110us; 129us; 113us; 129us; 114us; 129us; 118us; 129us; 133us; 129us; 136us; 129us; 139us; 129us; 142us; 129us; 147us; 129us; 177us; 129us; 178us; 129us; 179us; 129us; 180us; 129us; 181us; 129us; 182us; 129us; 183us; 129us; 184us; 129us; 185us; 129us; 186us; 129us; 187us; 129us; 188us; 129us; 189us; 129us; 190us; 129us; 191us; 129us; 192us; 129us; 193us; 129us; 194us; 129us; 201us; 129us; 202us; 129us; 207us; 130us; 208us; 130us; 219us; 129us; 222us; 129us; 226us; 129us; 229us; 129us; 61us; 65535us; 37us; 131us; 40us; 131us; 43us; 131us; 50us; 131us; 57us; 131us; 58us; 131us; 61us; 131us; 62us; 131us; 64us; 131us; 65us; 131us; 69us; 131us; 70us; 131us; 73us; 131us; 74us; 131us; 76us; 131us; 77us; 131us; 82us; 131us; 83us; 131us; 91us; 131us; 101us; 131us; 102us; 131us; 105us; 131us; 106us; 131us; 109us; 131us; 110us; 131us; 113us; 131us; 114us; 131us; 118us; 131us; 133us; 131us; 136us; 131us; 139us; 131us; 142us; 131us; 147us; 131us; 177us; 131us; 178us; 131us; 179us; 131us; 180us; 131us; 181us; 131us; 182us; 131us; 183us; 131us; 184us; 131us; 185us; 131us; 186us; 131us; 187us; 131us; 188us; 131us; 189us; 131us; 190us; 131us; 191us; 131us; 192us; 131us; 193us; 131us; 194us; 131us; 201us; 131us; 202us; 131us; 207us; 131us; 208us; 131us; 216us; 218us; 219us; 131us; 222us; 131us; 224us; 225us; 226us; 131us; 229us; 131us; 65us; 65535us; 37us; 128us; 40us; 128us; 43us; 128us; 50us; 128us; 57us; 128us; 58us; 128us; 61us; 128us; 62us; 128us; 64us; 128us; 65us; 128us; 69us; 128us; 70us; 128us; 73us; 128us; 74us; 128us; 76us; 128us; 77us; 128us; 82us; 128us; 83us; 128us; 91us; 128us; 101us; 128us; 102us; 128us; 105us; 128us; 106us; 128us; 109us; 128us; 110us; 128us; 113us; 128us; 114us; 128us; 118us; 128us; 133us; 128us; 136us; 128us; 139us; 128us; 142us; 128us; 147us; 128us; 151us; 152us; 177us; 128us; 178us; 128us; 179us; 128us; 180us; 128us; 181us; 128us; 182us; 128us; 183us; 128us; 184us; 128us; 185us; 128us; 186us; 128us; 187us; 128us; 188us; 128us; 189us; 128us; 190us; 128us; 191us; 128us; 192us; 128us; 193us; 128us; 194us; 128us; 196us; 197us; 199us; 200us; 201us; 128us; 202us; 128us; 207us; 128us; 208us; 127us; 210us; 211us; 213us; 214us; 216us; 217us; 219us; 128us; 222us; 128us; 226us; 128us; 229us; 128us; 1us; 65535us; 139us; 140us; 2us; 65535us; 139us; 221us; 222us; 223us; 2us; 65535us; 121us; 122us; 227us; 231us; 61us; 65535us; 37us; 206us; 40us; 206us; 43us; 206us; 50us; 206us; 57us; 206us; 58us; 206us; 61us; 206us; 62us; 206us; 64us; 206us; 65us; 206us; 69us; 206us; 70us; 206us; 73us; 206us; 74us; 206us; 76us; 206us; 77us; 206us; 82us; 206us; 83us; 206us; 91us; 206us; 101us; 206us; 102us; 206us; 105us; 206us; 106us; 206us; 109us; 206us; 110us; 206us; 113us; 206us; 114us; 206us; 118us; 206us; 133us; 206us; 136us; 206us; 139us; 206us; 142us; 206us; 147us; 206us; 177us; 206us; 178us; 206us; 179us; 206us; 180us; 206us; 181us; 206us; 182us; 206us; 183us; 206us; 184us; 206us; 185us; 206us; 186us; 206us; 187us; 206us; 188us; 206us; 189us; 206us; 190us; 206us; 191us; 206us; 192us; 206us; 193us; 206us; 194us; 206us; 201us; 206us; 202us; 206us; 207us; 206us; 208us; 206us; 216us; 206us; 219us; 206us; 222us; 206us; 224us; 206us; 226us; 206us; 229us; 206us; 61us; 65535us; 37us; 203us; 40us; 203us; 43us; 203us; 50us; 203us; 57us; 203us; 58us; 203us; 61us; 203us; 62us; 203us; 64us; 203us; 65us; 203us; 69us; 203us; 70us; 203us; 73us; 203us; 74us; 203us; 76us; 203us; 77us; 203us; 82us; 203us; 83us; 203us; 91us; 203us; 101us; 203us; 102us; 203us; 105us; 203us; 106us; 203us; 109us; 203us; 110us; 203us; 113us; 203us; 114us; 203us; 118us; 203us; 133us; 203us; 136us; 203us; 139us; 203us; 142us; 203us; 147us; 203us; 177us; 203us; 178us; 203us; 179us; 203us; 180us; 203us; 181us; 203us; 182us; 203us; 183us; 203us; 184us; 203us; 185us; 203us; 186us; 203us; 187us; 203us; 188us; 203us; 189us; 203us; 190us; 203us; 191us; 203us; 192us; 203us; 193us; 203us; 194us; 203us; 201us; 203us; 202us; 203us; 207us; 203us; 208us; 203us; 216us; 203us; 219us; 203us; 222us; 203us; 224us; 203us; 226us; 203us; 229us; 203us; 61us; 65535us; 37us; 204us; 40us; 204us; 43us; 204us; 50us; 204us; 57us; 204us; 58us; 204us; 61us; 204us; 62us; 204us; 64us; 204us; 65us; 204us; 69us; 204us; 70us; 204us; 73us; 204us; 74us; 204us; 76us; 204us; 77us; 204us; 82us; 204us; 83us; 204us; 91us; 204us; 101us; 204us; 102us; 204us; 105us; 204us; 106us; 204us; 109us; 204us; 110us; 204us; 113us; 204us; 114us; 204us; 118us; 204us; 133us; 204us; 136us; 204us; 139us; 204us; 142us; 204us; 147us; 204us; 177us; 204us; 178us; 204us; 179us; 204us; 180us; 204us; 181us; 204us; 182us; 204us; 183us; 204us; 184us; 204us; 185us; 204us; 186us; 204us; 187us; 204us; 188us; 204us; 189us; 204us; 190us; 204us; 191us; 204us; 192us; 204us; 193us; 204us; 194us; 204us; 201us; 204us; 202us; 204us; 207us; 204us; 208us; 204us; 216us; 204us; 219us; 204us; 222us; 204us; 224us; 204us; 226us; 204us; 229us; 204us; 61us; 65535us; 37us; 205us; 40us; 205us; 43us; 205us; 50us; 205us; 57us; 205us; 58us; 205us; 61us; 205us; 62us; 205us; 64us; 205us; 65us; 205us; 69us; 205us; 70us; 205us; 73us; 205us; 74us; 205us; 76us; 205us; 77us; 205us; 82us; 205us; 83us; 205us; 91us; 205us; 101us; 205us; 102us; 205us; 105us; 205us; 106us; 205us; 109us; 205us; 110us; 205us; 113us; 205us; 114us; 205us; 118us; 205us; 133us; 205us; 136us; 205us; 139us; 205us; 142us; 205us; 147us; 205us; 177us; 205us; 178us; 205us; 179us; 205us; 180us; 205us; 181us; 205us; 182us; 205us; 183us; 205us; 184us; 205us; 185us; 205us; 186us; 205us; 187us; 205us; 188us; 205us; 189us; 205us; 190us; 205us; 191us; 205us; 192us; 205us; 193us; 205us; 194us; 205us; 201us; 205us; 202us; 205us; 207us; 205us; 208us; 205us; 216us; 205us; 219us; 205us; 222us; 205us; 224us; 205us; 226us; 205us; 229us; 205us; 8us; 65535us; 0us; 10us; 4us; 10us; 25us; 9us; 29us; 9us; 35us; 9us; 37us; 9us; 40us; 9us; 43us; 9us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 6us; 9us; 18us; 23us; 26us; 29us; 33us; 51us; 55us; 60us; 76us; 83us; 143us; 203us; 265us; 331us; 333us; 336us; 339us; 401us; 463us; 525us; 587us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 3us; 1us; 3us; 1us; 4us; 1us; 4us; 1us; 5us; 1us; 6us; 2us; 6us; 13us; 3us; 6us; 10us; 11us; 1us; 7us; 2us; 7us; 13us; 1us; 8us; 3us; 8us; 10us; 11us; 1us; 9us; 3us; 9us; 10us; 11us; 1us; 9us; 2us; 10us; 11us; 1us; 10us; 1us; 11us; 1us; 11us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 15us; 2us; 16us; 17us; 1us; 17us; 1us; 17us; 1us; 18us; 1us; 18us; 1us; 18us; 1us; 20us; 1us; 20us; 1us; 21us; 1us; 21us; 1us; 21us; 1us; 22us; 3us; 22us; 28us; 36us; 1us; 23us; 15us; 24us; 50us; 51us; 52us; 53us; 54us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 71us; 72us; 1us; 24us; 2us; 25us; 26us; 1us; 25us; 15us; 26us; 50us; 51us; 52us; 53us; 54us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 71us; 72us; 1us; 26us; 1us; 27us; 1us; 28us; 3us; 28us; 36us; 37us; 1us; 28us; 3us; 28us; 36us; 37us; 17us; 28us; 36us; 37us; 50us; 51us; 52us; 53us; 54us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 71us; 72us; 15us; 28us; 50us; 51us; 52us; 53us; 54us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 71us; 72us; 1us; 28us; 3us; 28us; 36us; 37us; 1us; 28us; 1us; 28us; 2us; 28us; 36us; 1us; 28us; 1us; 29us; 2us; 29us; 38us; 1us; 29us; 2us; 29us; 38us; 16us; 29us; 38us; 50us; 51us; 52us; 53us; 54us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 71us; 72us; 15us; 29us; 50us; 51us; 52us; 53us; 54us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 71us; 72us; 1us; 29us; 2us; 29us; 38us; 1us; 29us; 2us; 30us; 31us; 3us; 30us; 31us; 39us; 2us; 30us; 31us; 3us; 30us; 31us; 39us; 1us; 30us; 2us; 30us; 39us; 1us; 30us; 2us; 30us; 39us; 16us; 30us; 39us; 50us; 51us; 52us; 53us; 54us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 71us; 72us; 15us; 30us; 50us; 51us; 52us; 53us; 54us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 71us; 72us; 1us; 30us; 2us; 30us; 39us; 1us; 30us; 2us; 30us; 39us; 1us; 31us; 1us; 31us; 15us; 31us; 50us; 51us; 52us; 53us; 54us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 71us; 72us; 1us; 31us; 1us; 31us; 1us; 32us; 1us; 32us; 1us; 33us; 1us; 33us; 1us; 34us; 2us; 34us; 40us; 1us; 34us; 2us; 34us; 40us; 16us; 34us; 40us; 50us; 51us; 52us; 53us; 54us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 71us; 72us; 15us; 34us; 50us; 51us; 52us; 53us; 54us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 71us; 72us; 1us; 34us; 2us; 34us; 40us; 16us; 34us; 40us; 50us; 51us; 52us; 53us; 54us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 71us; 72us; 15us; 34us; 50us; 51us; 52us; 53us; 54us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 71us; 72us; 1us; 34us; 2us; 34us; 40us; 16us; 34us; 40us; 50us; 51us; 52us; 53us; 54us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 71us; 72us; 15us; 34us; 50us; 51us; 52us; 53us; 54us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 71us; 72us; 1us; 34us; 2us; 34us; 40us; 1us; 34us; 2us; 34us; 40us; 1us; 35us; 1us; 35us; 15us; 35us; 50us; 51us; 52us; 53us; 54us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 71us; 72us; 1us; 35us; 1us; 35us; 1us; 35us; 1us; 35us; 1us; 36us; 1us; 37us; 1us; 38us; 11us; 41us; 45us; 55us; 56us; 57us; 58us; 59us; 67us; 69us; 80us; 83us; 10us; 41us; 45us; 55us; 56us; 57us; 58us; 59us; 67us; 69us; 83us; 1us; 42us; 2us; 42us; 77us; 1us; 43us; 1us; 44us; 1us; 44us; 15us; 44us; 50us; 51us; 52us; 53us; 54us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 71us; 72us; 1us; 44us; 1us; 45us; 15us; 45us; 50us; 51us; 52us; 53us; 54us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 71us; 72us; 2us; 46us; 79us; 1us; 46us; 1us; 46us; 1us; 46us; 1us; 47us; 15us; 47us; 50us; 51us; 52us; 53us; 54us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 71us; 72us; 1us; 48us; 1us; 48us; 1us; 48us; 1us; 48us; 15us; 48us; 50us; 51us; 52us; 53us; 54us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 71us; 72us; 1us; 48us; 1us; 49us; 1us; 49us; 2us; 49us; 83us; 1us; 49us; 15us; 50us; 50us; 51us; 52us; 53us; 54us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 71us; 72us; 15us; 50us; 51us; 51us; 52us; 53us; 54us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 71us; 72us; 15us; 50us; 51us; 52us; 52us; 53us; 54us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 71us; 72us; 15us; 50us; 51us; 52us; 53us; 53us; 54us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 71us; 72us; 15us; 50us; 51us; 52us; 53us; 54us; 54us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 71us; 72us; 15us; 50us; 51us; 52us; 53us; 54us; 55us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 71us; 72us; 15us; 50us; 51us; 52us; 53us; 54us; 56us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 71us; 72us; 15us; 50us; 51us; 52us; 53us; 54us; 57us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 71us; 72us; 15us; 50us; 51us; 52us; 53us; 54us; 58us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 71us; 72us; 15us; 50us; 51us; 52us; 53us; 54us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 71us; 72us; 15us; 50us; 51us; 52us; 53us; 54us; 60us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 71us; 72us; 15us; 50us; 51us; 52us; 53us; 54us; 60us; 61us; 61us; 62us; 63us; 64us; 65us; 66us; 71us; 72us; 15us; 50us; 51us; 52us; 53us; 54us; 60us; 61us; 62us; 62us; 63us; 64us; 65us; 66us; 71us; 72us; 15us; 50us; 51us; 52us; 53us; 54us; 60us; 61us; 62us; 63us; 63us; 64us; 65us; 66us; 71us; 72us; 15us; 50us; 51us; 52us; 53us; 54us; 60us; 61us; 62us; 63us; 64us; 64us; 65us; 66us; 71us; 72us; 15us; 50us; 51us; 52us; 53us; 54us; 60us; 61us; 62us; 63us; 64us; 65us; 65us; 66us; 71us; 72us; 15us; 50us; 51us; 52us; 53us; 54us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 66us; 71us; 72us; 15us; 50us; 51us; 52us; 53us; 54us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 66us; 71us; 72us; 15us; 50us; 51us; 52us; 53us; 54us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 71us; 71us; 72us; 14us; 50us; 51us; 52us; 53us; 54us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 71us; 72us; 15us; 50us; 51us; 52us; 53us; 54us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 71us; 72us; 72us; 15us; 50us; 51us; 52us; 53us; 54us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 71us; 72us; 83us; 16us; 50us; 51us; 52us; 53us; 54us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 71us; 72us; 86us; 87us; 1us; 50us; 1us; 51us; 1us; 52us; 1us; 53us; 1us; 54us; 1us; 55us; 1us; 56us; 1us; 57us; 1us; 58us; 1us; 59us; 1us; 60us; 1us; 61us; 1us; 62us; 1us; 63us; 1us; 64us; 1us; 65us; 1us; 66us; 1us; 66us; 1us; 67us; 1us; 68us; 2us; 68us; 83us; 1us; 69us; 1us; 70us; 2us; 70us; 83us; 1us; 71us; 1us; 72us; 1us; 73us; 1us; 74us; 1us; 75us; 1us; 76us; 1us; 77us; 2us; 77us; 80us; 1us; 77us; 1us; 78us; 2us; 78us; 83us; 1us; 79us; 1us; 80us; 2us; 80us; 83us; 1us; 80us; 2us; 81us; 82us; 2us; 81us; 83us; 1us; 82us; 1us; 83us; 1us; 83us; 1us; 85us; 1us; 87us; 1us; 87us; 2us; 88us; 90us; 2us; 88us; 90us; 2us; 88us; 90us; 2us; 88us; 90us; 1us; 89us; 1us; 89us; 1us; 89us; 1us; 90us; 1us; 91us; 1us; 92us; 2us; 93us; 97us; 1us; 93us; 1us; 94us; 1us; 95us; 1us; 96us; 1us; 97us; 1us; 98us; 1us; 99us; 1us; 100us; 1us; 101us; 1us; 102us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 12us; 14us; 16us; 18us; 20us; 23us; 27us; 29us; 32us; 34us; 38us; 40us; 44us; 46us; 49us; 51us; 53us; 55us; 57us; 59us; 61us; 63us; 65us; 67us; 69us; 71us; 73us; 75us; 77us; 80us; 82us; 84us; 86us; 88us; 90us; 92us; 94us; 96us; 98us; 100us; 102us; 106us; 108us; 124us; 126us; 129us; 131us; 147us; 149us; 151us; 153us; 157us; 159us; 163us; 181us; 197us; 199us; 203us; 205us; 207us; 210us; 212us; 214us; 217us; 219us; 222us; 239us; 255us; 257us; 260us; 262us; 265us; 269us; 272us; 276us; 278us; 281us; 283us; 286us; 303us; 319us; 321us; 324us; 326us; 329us; 331us; 333us; 349us; 351us; 353us; 355us; 357us; 359us; 361us; 363us; 366us; 368us; 371us; 388us; 404us; 406us; 409us; 426us; 442us; 444us; 447us; 464us; 480us; 482us; 485us; 487us; 490us; 492us; 494us; 510us; 512us; 514us; 516us; 518us; 520us; 522us; 524us; 536us; 547us; 549us; 552us; 554us; 556us; 558us; 574us; 576us; 578us; 594us; 597us; 599us; 601us; 603us; 605us; 621us; 623us; 625us; 627us; 629us; 645us; 647us; 649us; 651us; 654us; 656us; 672us; 688us; 704us; 720us; 736us; 752us; 768us; 784us; 800us; 816us; 832us; 848us; 864us; 880us; 896us; 912us; 928us; 944us; 960us; 975us; 991us; 1007us; 1024us; 1026us; 1028us; 1030us; 1032us; 1034us; 1036us; 1038us; 1040us; 1042us; 1044us; 1046us; 1048us; 1050us; 1052us; 1054us; 1056us; 1058us; 1060us; 1062us; 1064us; 1067us; 1069us; 1071us; 1074us; 1076us; 1078us; 1080us; 1082us; 1084us; 1086us; 1088us; 1091us; 1093us; 1095us; 1098us; 1100us; 1102us; 1105us; 1107us; 1110us; 1113us; 1115us; 1117us; 1119us; 1121us; 1123us; 1125us; 1128us; 1131us; 1134us; 1137us; 1139us; 1141us; 1143us; 1145us; 1147us; 1149us; 1152us; 1154us; 1156us; 1158us; 1160us; 1162us; 1164us; 1166us; 1168us; 1170us; |]
let _fsyacc_action_rows = 245
let _fsyacc_actionTableElements = [|6us; 16386us; 39us; 241us; 42us; 240us; 43us; 242us; 44us; 243us; 45us; 244us; 50us; 23us; 0us; 49152us; 1us; 32768us; 0us; 3us; 0us; 16385us; 6us; 16386us; 39us; 241us; 42us; 240us; 43us; 242us; 44us; 243us; 45us; 244us; 50us; 23us; 0us; 16387us; 1us; 32768us; 21us; 7us; 0us; 16388us; 0us; 16389us; 3us; 32768us; 15us; 16us; 36us; 14us; 58us; 12us; 3us; 32768us; 15us; 16us; 36us; 14us; 58us; 13us; 1us; 16390us; 19us; 19us; 0us; 16391us; 1us; 16391us; 15us; 29us; 3us; 32768us; 15us; 16us; 36us; 14us; 58us; 12us; 1us; 16392us; 19us; 19us; 3us; 32768us; 15us; 16us; 36us; 14us; 58us; 12us; 2us; 32768us; 16us; 18us; 19us; 19us; 0us; 16393us; 2us; 32768us; 20us; 20us; 61us; 21us; 0us; 16394us; 1us; 32768us; 20us; 22us; 0us; 16395us; 1us; 32768us; 58us; 24us; 1us; 32768us; 15us; 25us; 5us; 16398us; 39us; 241us; 42us; 240us; 43us; 242us; 44us; 243us; 45us; 244us; 1us; 32768us; 16us; 27us; 1us; 32768us; 17us; 37us; 0us; 16396us; 5us; 16398us; 39us; 241us; 42us; 240us; 43us; 242us; 44us; 243us; 45us; 244us; 1us; 32768us; 16us; 31us; 1us; 32768us; 17us; 37us; 0us; 16397us; 0us; 16399us; 1us; 16400us; 22us; 35us; 5us; 32768us; 39us; 241us; 42us; 240us; 43us; 242us; 44us; 243us; 45us; 244us; 0us; 16401us; 30us; 16403us; 6us; 132us; 8us; 196us; 9us; 199us; 12us; 117us; 15us; 208us; 17us; 37us; 24us; 210us; 25us; 142us; 35us; 234us; 36us; 216us; 39us; 241us; 41us; 56us; 42us; 240us; 43us; 242us; 44us; 243us; 45us; 244us; 46us; 236us; 47us; 144us; 48us; 150us; 49us; 50us; 51us; 68us; 52us; 100us; 53us; 77us; 55us; 95us; 56us; 97us; 57us; 237us; 58us; 138us; 59us; 232us; 60us; 238us; 61us; 233us; 1us; 32768us; 18us; 39us; 0us; 16402us; 30us; 16403us; 6us; 132us; 8us; 196us; 9us; 199us; 12us; 117us; 15us; 208us; 17us; 37us; 24us; 210us; 25us; 142us; 35us; 234us; 36us; 216us; 39us; 241us; 41us; 56us; 42us; 240us; 43us; 242us; 44us; 243us; 45us; 244us; 46us; 236us; 47us; 144us; 48us; 150us; 49us; 50us; 51us; 68us; 52us; 100us; 53us; 77us; 55us; 95us; 56us; 97us; 57us; 237us; 58us; 138us; 59us; 232us; 60us; 238us; 61us; 233us; 0us; 16404us; 1us; 32768us; 21us; 43us; 30us; 16403us; 6us; 132us; 8us; 196us; 9us; 199us; 12us; 117us; 15us; 208us; 17us; 37us; 24us; 210us; 25us; 142us; 35us; 234us; 36us; 216us; 39us; 241us; 41us; 56us; 42us; 240us; 43us; 242us; 44us; 243us; 45us; 244us; 46us; 236us; 47us; 144us; 48us; 150us; 49us; 50us; 51us; 68us; 52us; 100us; 53us; 77us; 55us; 95us; 56us; 97us; 57us; 237us; 58us; 138us; 59us; 232us; 60us; 238us; 61us; 233us; 0us; 16405us; 0us; 16406us; 1us; 16406us; 40us; 65us; 0us; 16407us; 15us; 32768us; 10us; 193us; 21us; 49us; 26us; 202us; 27us; 201us; 28us; 187us; 29us; 188us; 30us; 189us; 31us; 190us; 32us; 191us; 33us; 192us; 34us; 177us; 35us; 178us; 36us; 179us; 37us; 180us; 38us; 181us; 0us; 16408us; 17us; 32768us; 6us; 132us; 8us; 196us; 9us; 199us; 15us; 208us; 21us; 51us; 24us; 210us; 25us; 142us; 35us; 234us; 36us; 216us; 46us; 236us; 47us; 144us; 48us; 150us; 57us; 237us; 58us; 138us; 59us; 232us; 60us; 238us; 61us; 233us; 0us; 16409us; 15us; 32768us; 10us; 193us; 21us; 53us; 26us; 202us; 27us; 201us; 28us; 187us; 29us; 188us; 30us; 189us; 31us; 190us; 32us; 191us; 33us; 192us; 34us; 177us; 35us; 178us; 36us; 179us; 37us; 180us; 38us; 181us; 0us; 16410us; 0us; 16411us; 1us; 32768us; 15us; 57us; 1us; 32768us; 15us; 58us; 16us; 32768us; 6us; 132us; 8us; 196us; 9us; 199us; 15us; 208us; 24us; 210us; 25us; 142us; 35us; 234us; 36us; 216us; 46us; 236us; 47us; 144us; 48us; 150us; 57us; 237us; 58us; 138us; 59us; 232us; 60us; 238us; 61us; 233us; 16us; 32768us; 6us; 132us; 8us; 196us; 9us; 199us; 15us; 208us; 24us; 210us; 25us; 142us; 35us; 234us; 36us; 216us; 46us; 236us; 47us; 144us; 48us; 150us; 57us; 237us; 58us; 138us; 59us; 232us; 60us; 238us; 61us; 233us; 15us; 32768us; 10us; 193us; 16us; 62us; 26us; 202us; 27us; 201us; 28us; 187us; 29us; 188us; 30us; 189us; 31us; 190us; 32us; 191us; 33us; 192us; 34us; 177us; 35us; 178us; 36us; 179us; 37us; 180us; 38us; 181us; 15us; 32768us; 10us; 193us; 16us; 61us; 26us; 202us; 27us; 201us; 28us; 187us; 29us; 188us; 30us; 189us; 31us; 190us; 32us; 191us; 33us; 192us; 34us; 177us; 35us; 178us; 36us; 179us; 37us; 180us; 38us; 181us; 25us; 32768us; 6us; 132us; 8us; 196us; 9us; 199us; 12us; 117us; 15us; 208us; 17us; 37us; 24us; 210us; 25us; 142us; 35us; 234us; 36us; 216us; 41us; 55us; 46us; 236us; 47us; 144us; 48us; 150us; 49us; 50us; 51us; 67us; 52us; 99us; 53us; 76us; 55us; 95us; 56us; 97us; 57us; 237us; 58us; 138us; 59us; 232us; 60us; 238us; 61us; 233us; 25us; 32768us; 6us; 132us; 8us; 196us; 9us; 199us; 12us; 117us; 15us; 208us; 17us; 37us; 24us; 210us; 25us; 142us; 35us; 234us; 36us; 216us; 41us; 56us; 46us; 236us; 47us; 144us; 48us; 150us; 49us; 50us; 51us; 68us; 52us; 100us; 53us; 77us; 55us; 95us; 56us; 97us; 57us; 237us; 58us; 138us; 59us; 232us; 60us; 238us; 61us; 233us; 1us; 32768us; 40us; 64us; 25us; 32768us; 6us; 132us; 8us; 196us; 9us; 199us; 12us; 117us; 15us; 208us; 17us; 37us; 24us; 210us; 25us; 142us; 35us; 234us; 36us; 216us; 41us; 55us; 46us; 236us; 47us; 144us; 48us; 150us; 49us; 50us; 51us; 67us; 52us; 99us; 53us; 76us; 55us; 95us; 56us; 97us; 57us; 237us; 58us; 138us; 59us; 232us; 60us; 238us; 61us; 233us; 25us; 32768us; 6us; 132us; 8us; 196us; 9us; 199us; 12us; 117us; 15us; 208us; 17us; 37us; 24us; 210us; 25us; 142us; 35us; 234us; 36us; 216us; 41us; 56us; 46us; 236us; 47us; 144us; 48us; 150us; 49us; 50us; 51us; 68us; 52us; 100us; 53us; 77us; 55us; 95us; 56us; 97us; 57us; 237us; 58us; 138us; 59us; 232us; 60us; 238us; 61us; 233us; 0us; 16412us; 1us; 32768us; 15us; 69us; 1us; 32768us; 15us; 70us; 16us; 32768us; 6us; 132us; 8us; 196us; 9us; 199us; 15us; 208us; 24us; 210us; 25us; 142us; 35us; 234us; 36us; 216us; 46us; 236us; 47us; 144us; 48us; 150us; 57us; 237us; 58us; 138us; 59us; 232us; 60us; 238us; 61us; 233us; 16us; 32768us; 6us; 132us; 8us; 196us; 9us; 199us; 15us; 208us; 24us; 210us; 25us; 142us; 35us; 234us; 36us; 216us; 46us; 236us; 47us; 144us; 48us; 150us; 57us; 237us; 58us; 138us; 59us; 232us; 60us; 238us; 61us; 233us; 15us; 32768us; 10us; 193us; 16us; 74us; 26us; 202us; 27us; 201us; 28us; 187us; 29us; 188us; 30us; 189us; 31us; 190us; 32us; 191us; 33us; 192us; 34us; 177us; 35us; 178us; 36us; 179us; 37us; 180us; 38us; 181us; 15us; 32768us; 10us; 193us; 16us; 73us; 26us; 202us; 27us; 201us; 28us; 187us; 29us; 188us; 30us; 189us; 31us; 190us; 32us; 191us; 33us; 192us; 34us; 177us; 35us; 178us; 36us; 179us; 37us; 180us; 38us; 181us; 25us; 32768us; 6us; 132us; 8us; 196us; 9us; 199us; 12us; 117us; 15us; 208us; 17us; 37us; 24us; 210us; 25us; 142us; 35us; 234us; 36us; 216us; 41us; 55us; 46us; 236us; 47us; 144us; 48us; 150us; 49us; 50us; 51us; 67us; 52us; 99us; 53us; 76us; 55us; 95us; 56us; 97us; 57us; 237us; 58us; 138us; 59us; 232us; 60us; 238us; 61us; 233us; 25us; 32768us; 6us; 132us; 8us; 196us; 9us; 199us; 12us; 117us; 15us; 208us; 17us; 37us; 24us; 210us; 25us; 142us; 35us; 234us; 36us; 216us; 41us; 56us; 46us; 236us; 47us; 144us; 48us; 150us; 49us; 50us; 51us; 68us; 52us; 100us; 53us; 77us; 55us; 95us; 56us; 97us; 57us; 237us; 58us; 138us; 59us; 232us; 60us; 238us; 61us; 233us; 0us; 16413us; 25us; 32768us; 6us; 132us; 8us; 196us; 9us; 199us; 12us; 117us; 15us; 208us; 17us; 37us; 24us; 210us; 25us; 142us; 35us; 234us; 36us; 216us; 41us; 55us; 46us; 236us; 47us; 144us; 48us; 150us; 49us; 50us; 51us; 67us; 52us; 99us; 53us; 76us; 55us; 95us; 56us; 97us; 57us; 237us; 58us; 138us; 59us; 232us; 60us; 238us; 61us; 233us; 25us; 32768us; 6us; 132us; 8us; 196us; 9us; 199us; 12us; 117us; 15us; 208us; 17us; 37us; 24us; 210us; 25us; 142us; 35us; 234us; 36us; 216us; 41us; 55us; 46us; 236us; 47us; 144us; 48us; 150us; 49us; 50us; 51us; 67us; 52us; 99us; 53us; 76us; 55us; 95us; 56us; 97us; 57us; 237us; 58us; 138us; 59us; 232us; 60us; 238us; 61us; 233us; 2us; 32768us; 51us; 80us; 54us; 90us; 2us; 32768us; 51us; 81us; 54us; 90us; 1us; 32768us; 15us; 82us; 1us; 32768us; 15us; 83us; 16us; 32768us; 6us; 132us; 8us; 196us; 9us; 199us; 15us; 208us; 24us; 210us; 25us; 142us; 35us; 234us; 36us; 216us; 46us; 236us; 47us; 144us; 48us; 150us; 57us; 237us; 58us; 138us; 59us; 232us; 60us; 238us; 61us; 233us; 16us; 32768us; 6us; 132us; 8us; 196us; 9us; 199us; 15us; 208us; 24us; 210us; 25us; 142us; 35us; 234us; 36us; 216us; 46us; 236us; 47us; 144us; 48us; 150us; 57us; 237us; 58us; 138us; 59us; 232us; 60us; 238us; 61us; 233us; 15us; 32768us; 10us; 193us; 16us; 87us; 26us; 202us; 27us; 201us; 28us; 187us; 29us; 188us; 30us; 189us; 31us; 190us; 32us; 191us; 33us; 192us; 34us; 177us; 35us; 178us; 36us; 179us; 37us; 180us; 38us; 181us; 15us; 32768us; 10us; 193us; 16us; 86us; 26us; 202us; 27us; 201us; 28us; 187us; 29us; 188us; 30us; 189us; 31us; 190us; 32us; 191us; 33us; 192us; 34us; 177us; 35us; 178us; 36us; 179us; 37us; 180us; 38us; 181us; 1us; 32768us; 21us; 88us; 1us; 32768us; 21us; 89us; 0us; 16414us; 0us; 16414us; 1us; 32768us; 15us; 91us; 16us; 32768us; 6us; 132us; 8us; 196us; 9us; 199us; 15us; 208us; 24us; 210us; 25us; 142us; 35us; 234us; 36us; 216us; 46us; 236us; 47us; 144us; 48us; 150us; 57us; 237us; 58us; 138us; 59us; 232us; 60us; 238us; 61us; 233us; 15us; 32768us; 10us; 193us; 16us; 93us; 26us; 202us; 27us; 201us; 28us; 187us; 29us; 188us; 30us; 189us; 31us; 190us; 32us; 191us; 33us; 192us; 34us; 177us; 35us; 178us; 36us; 179us; 37us; 180us; 38us; 181us; 1us; 32768us; 21us; 94us; 0us; 16415us; 1us; 32768us; 21us; 96us; 0us; 16416us; 1us; 32768us; 21us; 98us; 0us; 16417us; 1us; 32768us; 15us; 101us; 1us; 32768us; 15us; 102us; 16us; 32768us; 6us; 132us; 8us; 196us; 9us; 199us; 15us; 208us; 24us; 210us; 25us; 142us; 35us; 234us; 36us; 216us; 46us; 236us; 47us; 144us; 48us; 150us; 57us; 237us; 58us; 138us; 59us; 232us; 60us; 238us; 61us; 233us; 16us; 32768us; 6us; 132us; 8us; 196us; 9us; 199us; 15us; 208us; 24us; 210us; 25us; 142us; 35us; 234us; 36us; 216us; 46us; 236us; 47us; 144us; 48us; 150us; 57us; 237us; 58us; 138us; 59us; 232us; 60us; 238us; 61us; 233us; 15us; 32768us; 10us; 193us; 21us; 106us; 26us; 202us; 27us; 201us; 28us; 187us; 29us; 188us; 30us; 189us; 31us; 190us; 32us; 191us; 33us; 192us; 34us; 177us; 35us; 178us; 36us; 179us; 37us; 180us; 38us; 181us; 15us; 32768us; 10us; 193us; 21us; 105us; 26us; 202us; 27us; 201us; 28us; 187us; 29us; 188us; 30us; 189us; 31us; 190us; 32us; 191us; 33us; 192us; 34us; 177us; 35us; 178us; 36us; 179us; 37us; 180us; 38us; 181us; 16us; 32768us; 6us; 132us; 8us; 196us; 9us; 199us; 15us; 208us; 24us; 210us; 25us; 142us; 35us; 234us; 36us; 216us; 46us; 236us; 47us; 144us; 48us; 150us; 57us; 237us; 58us; 138us; 59us; 232us; 60us; 238us; 61us; 233us; 16us; 32768us; 6us; 132us; 8us; 196us; 9us; 199us; 15us; 208us; 24us; 210us; 25us; 142us; 35us; 234us; 36us; 216us; 46us; 236us; 47us; 144us; 48us; 150us; 57us; 237us; 58us; 138us; 59us; 232us; 60us; 238us; 61us; 233us; 15us; 32768us; 10us; 193us; 21us; 110us; 26us; 202us; 27us; 201us; 28us; 187us; 29us; 188us; 30us; 189us; 31us; 190us; 32us; 191us; 33us; 192us; 34us; 177us; 35us; 178us; 36us; 179us; 37us; 180us; 38us; 181us; 15us; 32768us; 10us; 193us; 21us; 109us; 26us; 202us; 27us; 201us; 28us; 187us; 29us; 188us; 30us; 189us; 31us; 190us; 32us; 191us; 33us; 192us; 34us; 177us; 35us; 178us; 36us; 179us; 37us; 180us; 38us; 181us; 16us; 32768us; 6us; 132us; 8us; 196us; 9us; 199us; 15us; 208us; 24us; 210us; 25us; 142us; 35us; 234us; 36us; 216us; 46us; 236us; 47us; 144us; 48us; 150us; 57us; 237us; 58us; 138us; 59us; 232us; 60us; 238us; 61us; 233us; 16us; 32768us; 6us; 132us; 8us; 196us; 9us; 199us; 15us; 208us; 24us; 210us; 25us; 142us; 35us; 234us; 36us; 216us; 46us; 236us; 47us; 144us; 48us; 150us; 57us; 237us; 58us; 138us; 59us; 232us; 60us; 238us; 61us; 233us; 15us; 32768us; 10us; 193us; 16us; 114us; 26us; 202us; 27us; 201us; 28us; 187us; 29us; 188us; 30us; 189us; 31us; 190us; 32us; 191us; 33us; 192us; 34us; 177us; 35us; 178us; 36us; 179us; 37us; 180us; 38us; 181us; 15us; 32768us; 10us; 193us; 16us; 113us; 26us; 202us; 27us; 201us; 28us; 187us; 29us; 188us; 30us; 189us; 31us; 190us; 32us; 191us; 33us; 192us; 34us; 177us; 35us; 178us; 36us; 179us; 37us; 180us; 38us; 181us; 25us; 32768us; 6us; 132us; 8us; 196us; 9us; 199us; 12us; 117us; 15us; 208us; 17us; 37us; 24us; 210us; 25us; 142us; 35us; 234us; 36us; 216us; 41us; 55us; 46us; 236us; 47us; 144us; 48us; 150us; 49us; 50us; 51us; 67us; 52us; 99us; 53us; 76us; 55us; 95us; 56us; 97us; 57us; 237us; 58us; 138us; 59us; 232us; 60us; 238us; 61us; 233us; 25us; 32768us; 6us; 132us; 8us; 196us; 9us; 199us; 12us; 117us; 15us; 208us; 17us; 37us; 24us; 210us; 25us; 142us; 35us; 234us; 36us; 216us; 41us; 55us; 46us; 236us; 47us; 144us; 48us; 150us; 49us; 50us; 51us; 67us; 52us; 99us; 53us; 76us; 55us; 95us; 56us; 97us; 57us; 237us; 58us; 138us; 59us; 232us; 60us; 238us; 61us; 233us; 0us; 16418us; 0us; 16418us; 1us; 32768us; 15us; 118us; 16us; 32768us; 6us; 132us; 8us; 196us; 9us; 199us; 15us; 208us; 24us; 210us; 25us; 142us; 35us; 234us; 36us; 216us; 46us; 236us; 47us; 144us; 48us; 150us; 57us; 237us; 58us; 138us; 59us; 232us; 60us; 238us; 61us; 233us; 15us; 32768us; 10us; 193us; 16us; 120us; 26us; 202us; 27us; 201us; 28us; 187us; 29us; 188us; 30us; 189us; 31us; 190us; 32us; 191us; 33us; 192us; 34us; 177us; 35us; 178us; 36us; 179us; 37us; 180us; 38us; 181us; 1us; 32768us; 17us; 121us; 2us; 32768us; 13us; 224us; 14us; 228us; 1us; 32768us; 18us; 123us; 0us; 16419us; 0us; 16420us; 0us; 16421us; 0us; 16422us; 10us; 16425us; 1us; 182us; 2us; 183us; 3us; 184us; 4us; 185us; 5us; 186us; 8us; 195us; 9us; 198us; 16us; 215us; 19us; 219us; 23us; 136us; 9us; 16425us; 1us; 182us; 2us; 183us; 3us; 184us; 4us; 185us; 5us; 186us; 8us; 195us; 9us; 198us; 19us; 219us; 23us; 136us; 0us; 16426us; 1us; 16426us; 16us; 209us; 0us; 16427us; 1us; 32768us; 15us; 133us; 16us; 32768us; 6us; 132us; 8us; 196us; 9us; 199us; 15us; 208us; 24us; 210us; 25us; 142us; 35us; 234us; 36us; 216us; 46us; 236us; 47us; 144us; 48us; 150us; 57us; 237us; 58us; 138us; 59us; 232us; 60us; 238us; 61us; 233us; 15us; 32768us; 10us; 193us; 16us; 135us; 26us; 202us; 27us; 201us; 28us; 187us; 29us; 188us; 30us; 189us; 31us; 190us; 32us; 191us; 33us; 192us; 34us; 177us; 35us; 178us; 36us; 179us; 37us; 180us; 38us; 181us; 0us; 16428us; 16us; 32768us; 6us; 132us; 8us; 196us; 9us; 199us; 15us; 208us; 24us; 210us; 25us; 142us; 35us; 234us; 36us; 216us; 46us; 236us; 47us; 144us; 48us; 150us; 57us; 237us; 58us; 138us; 59us; 232us; 60us; 238us; 61us; 233us; 14us; 16429us; 10us; 193us; 26us; 202us; 27us; 201us; 28us; 187us; 29us; 188us; 30us; 189us; 31us; 190us; 32us; 191us; 33us; 192us; 34us; 177us; 35us; 178us; 36us; 179us; 37us; 180us; 38us; 181us; 1us; 16463us; 15us; 139us; 16us; 16468us; 6us; 132us; 8us; 196us; 9us; 199us; 15us; 208us; 24us; 210us; 25us; 142us; 35us; 234us; 36us; 216us; 46us; 236us; 47us; 144us; 48us; 150us; 57us; 237us; 58us; 138us; 59us; 232us; 60us; 238us; 61us; 233us; 1us; 32768us; 16us; 141us; 0us; 16430us; 16us; 32768us; 6us; 132us; 8us; 196us; 9us; 199us; 15us; 208us; 24us; 210us; 25us; 142us; 35us; 234us; 36us; 216us; 46us; 236us; 47us; 144us; 48us; 150us; 57us; 237us; 58us; 138us; 59us; 232us; 60us; 238us; 61us; 233us; 0us; 16431us; 1us; 32768us; 15us; 145us; 1us; 32768us; 57us; 146us; 1us; 32768us; 22us; 147us; 16us; 32768us; 6us; 132us; 8us; 196us; 9us; 199us; 15us; 208us; 24us; 210us; 25us; 142us; 35us; 234us; 36us; 216us; 46us; 236us; 47us; 144us; 48us; 150us; 57us; 237us; 58us; 138us; 59us; 232us; 60us; 238us; 61us; 233us; 15us; 32768us; 10us; 193us; 16us; 149us; 26us; 202us; 27us; 201us; 28us; 187us; 29us; 188us; 30us; 189us; 31us; 190us; 32us; 191us; 33us; 192us; 34us; 177us; 35us; 178us; 36us; 179us; 37us; 180us; 38us; 181us; 0us; 16432us; 1us; 32768us; 15us; 151us; 3us; 32768us; 15us; 213us; 36us; 216us; 58us; 212us; 2us; 32768us; 16us; 153us; 19us; 219us; 0us; 16433us; 3us; 16434us; 36us; 179us; 37us; 180us; 38us; 181us; 3us; 16435us; 36us; 179us; 37us; 180us; 38us; 181us; 0us; 16436us; 0us; 16437us; 0us; 16438us; 14us; 16439us; 10us; 193us; 26us; 202us; 27us; 201us; 28us; 187us; 29us; 188us; 30us; 189us; 31us; 190us; 32us; 191us; 33us; 192us; 34us; 177us; 35us; 178us; 36us; 179us; 37us; 180us; 38us; 181us; 14us; 16440us; 10us; 193us; 26us; 202us; 27us; 201us; 28us; 187us; 29us; 188us; 30us; 189us; 31us; 190us; 32us; 191us; 33us; 192us; 34us; 177us; 35us; 178us; 36us; 179us; 37us; 180us; 38us; 181us; 14us; 16441us; 10us; 193us; 26us; 202us; 27us; 201us; 28us; 187us; 29us; 188us; 30us; 189us; 31us; 190us; 32us; 191us; 33us; 192us; 34us; 177us; 35us; 178us; 36us; 179us; 37us; 180us; 38us; 181us; 14us; 16442us; 10us; 193us; 26us; 202us; 27us; 201us; 28us; 187us; 29us; 188us; 30us; 189us; 31us; 190us; 32us; 191us; 33us; 192us; 34us; 177us; 35us; 178us; 36us; 179us; 37us; 180us; 38us; 181us; 14us; 16443us; 10us; 193us; 26us; 202us; 27us; 201us; 28us; 187us; 29us; 188us; 30us; 189us; 31us; 190us; 32us; 191us; 33us; 192us; 34us; 177us; 35us; 178us; 36us; 179us; 37us; 180us; 38us; 181us; 9us; 16444us; 30us; 189us; 31us; 190us; 32us; 191us; 33us; 192us; 34us; 177us; 35us; 178us; 36us; 179us; 37us; 180us; 38us; 181us; 9us; 16445us; 30us; 189us; 31us; 190us; 32us; 191us; 33us; 192us; 34us; 177us; 35us; 178us; 36us; 179us; 37us; 180us; 38us; 181us; 9us; 16446us; 30us; 189us; 31us; 190us; 32us; 191us; 33us; 192us; 34us; 177us; 35us; 178us; 36us; 179us; 37us; 180us; 38us; 181us; 9us; 16447us; 30us; 189us; 31us; 190us; 32us; 191us; 33us; 192us; 34us; 177us; 35us; 178us; 36us; 179us; 37us; 180us; 38us; 181us; 9us; 16448us; 30us; 189us; 31us; 190us; 32us; 191us; 33us; 192us; 34us; 177us; 35us; 178us; 36us; 179us; 37us; 180us; 38us; 181us; 9us; 16449us; 30us; 189us; 31us; 190us; 32us; 191us; 33us; 192us; 34us; 177us; 35us; 178us; 36us; 179us; 37us; 180us; 38us; 181us; 15us; 32768us; 10us; 193us; 11us; 194us; 26us; 202us; 27us; 201us; 28us; 187us; 29us; 188us; 30us; 189us; 31us; 190us; 32us; 191us; 33us; 192us; 34us; 177us; 35us; 178us; 36us; 179us; 37us; 180us; 38us; 181us; 14us; 16450us; 10us; 193us; 26us; 202us; 27us; 201us; 28us; 187us; 29us; 188us; 30us; 189us; 31us; 190us; 32us; 191us; 33us; 192us; 34us; 177us; 35us; 178us; 36us; 179us; 37us; 180us; 38us; 181us; 11us; 16455us; 28us; 187us; 29us; 188us; 30us; 189us; 31us; 190us; 32us; 191us; 33us; 192us; 34us; 177us; 35us; 178us; 36us; 179us; 37us; 180us; 38us; 181us; 14us; 32768us; 10us; 193us; 26us; 202us; 27us; 201us; 28us; 187us; 29us; 188us; 30us; 189us; 31us; 190us; 32us; 191us; 33us; 192us; 34us; 177us; 35us; 178us; 36us; 179us; 37us; 180us; 38us; 181us; 12us; 16456us; 27us; 201us; 28us; 187us; 29us; 188us; 30us; 189us; 31us; 190us; 32us; 191us; 33us; 192us; 34us; 177us; 35us; 178us; 36us; 179us; 37us; 180us; 38us; 181us; 15us; 32768us; 10us; 193us; 20us; 220us; 26us; 202us; 27us; 201us; 28us; 187us; 29us; 188us; 30us; 189us; 31us; 190us; 32us; 191us; 33us; 192us; 34us; 177us; 35us; 178us; 36us; 179us; 37us; 180us; 38us; 181us; 15us; 16470us; 10us; 193us; 22us; 222us; 26us; 202us; 27us; 201us; 28us; 187us; 29us; 188us; 30us; 189us; 31us; 190us; 32us; 191us; 33us; 192us; 34us; 177us; 35us; 178us; 36us; 179us; 37us; 180us; 38us; 181us; 16us; 32768us; 6us; 132us; 8us; 196us; 9us; 199us; 15us; 208us; 24us; 210us; 25us; 142us; 35us; 234us; 36us; 216us; 46us; 236us; 47us; 144us; 48us; 150us; 57us; 237us; 58us; 138us; 59us; 232us; 60us; 238us; 61us; 233us; 16us; 32768us; 6us; 132us; 8us; 196us; 9us; 199us; 15us; 208us; 24us; 210us; 25us; 142us; 35us; 234us; 36us; 216us; 46us; 236us; 47us; 144us; 48us; 150us; 57us; 237us; 58us; 138us; 59us; 232us; 60us; 238us; 61us; 233us; 16us; 32768us; 6us; 132us; 8us; 196us; 9us; 199us; 15us; 208us; 24us; 210us; 25us; 142us; 35us; 234us; 36us; 216us; 46us; 236us; 47us; 144us; 48us; 150us; 57us; 237us; 58us; 138us; 59us; 232us; 60us; 238us; 61us; 233us; 16us; 32768us; 6us; 132us; 8us; 196us; 9us; 199us; 15us; 208us; 24us; 210us; 25us; 142us; 35us; 234us; 36us; 216us; 46us; 236us; 47us; 144us; 48us; 150us; 57us; 237us; 58us; 138us; 59us; 232us; 60us; 238us; 61us; 233us; 16us; 32768us; 6us; 132us; 8us; 196us; 9us; 199us; 15us; 208us; 24us; 210us; 25us; 142us; 35us; 234us; 36us; 216us; 46us; 236us; 47us; 144us; 48us; 150us; 57us; 237us; 58us; 138us; 59us; 232us; 60us; 238us; 61us; 233us; 16us; 32768us; 6us; 132us; 8us; 196us; 9us; 199us; 15us; 208us; 24us; 210us; 25us; 142us; 35us; 234us; 36us; 216us; 46us; 236us; 47us; 144us; 48us; 150us; 57us; 237us; 58us; 138us; 59us; 232us; 60us; 238us; 61us; 233us; 16us; 32768us; 6us; 132us; 8us; 196us; 9us; 199us; 15us; 208us; 24us; 210us; 25us; 142us; 35us; 234us; 36us; 216us; 46us; 236us; 47us; 144us; 48us; 150us; 57us; 237us; 58us; 138us; 59us; 232us; 60us; 238us; 61us; 233us; 16us; 32768us; 6us; 132us; 8us; 196us; 9us; 199us; 15us; 208us; 24us; 210us; 25us; 142us; 35us; 234us; 36us; 216us; 46us; 236us; 47us; 144us; 48us; 150us; 57us; 237us; 58us; 138us; 59us; 232us; 60us; 238us; 61us; 233us; 16us; 32768us; 6us; 132us; 8us; 196us; 9us; 199us; 15us; 208us; 24us; 210us; 25us; 142us; 35us; 234us; 36us; 216us; 46us; 236us; 47us; 144us; 48us; 150us; 57us; 237us; 58us; 138us; 59us; 232us; 60us; 238us; 61us; 233us; 16us; 32768us; 6us; 132us; 8us; 196us; 9us; 199us; 15us; 208us; 24us; 210us; 25us; 142us; 35us; 234us; 36us; 216us; 46us; 236us; 47us; 144us; 48us; 150us; 57us; 237us; 58us; 138us; 59us; 232us; 60us; 238us; 61us; 233us; 16us; 32768us; 6us; 132us; 8us; 196us; 9us; 199us; 15us; 208us; 24us; 210us; 25us; 142us; 35us; 234us; 36us; 216us; 46us; 236us; 47us; 144us; 48us; 150us; 57us; 237us; 58us; 138us; 59us; 232us; 60us; 238us; 61us; 233us; 16us; 32768us; 6us; 132us; 8us; 196us; 9us; 199us; 15us; 208us; 24us; 210us; 25us; 142us; 35us; 234us; 36us; 216us; 46us; 236us; 47us; 144us; 48us; 150us; 57us; 237us; 58us; 138us; 59us; 232us; 60us; 238us; 61us; 233us; 16us; 32768us; 6us; 132us; 8us; 196us; 9us; 199us; 15us; 208us; 24us; 210us; 25us; 142us; 35us; 234us; 36us; 216us; 46us; 236us; 47us; 144us; 48us; 150us; 57us; 237us; 58us; 138us; 59us; 232us; 60us; 238us; 61us; 233us; 16us; 32768us; 6us; 132us; 8us; 196us; 9us; 199us; 15us; 208us; 24us; 210us; 25us; 142us; 35us; 234us; 36us; 216us; 46us; 236us; 47us; 144us; 48us; 150us; 57us; 237us; 58us; 138us; 59us; 232us; 60us; 238us; 61us; 233us; 16us; 32768us; 6us; 132us; 8us; 196us; 9us; 199us; 15us; 208us; 24us; 210us; 25us; 142us; 35us; 234us; 36us; 216us; 46us; 236us; 47us; 144us; 48us; 150us; 57us; 237us; 58us; 138us; 59us; 232us; 60us; 238us; 61us; 233us; 16us; 32768us; 6us; 132us; 8us; 196us; 9us; 199us; 15us; 208us; 24us; 210us; 25us; 142us; 35us; 234us; 36us; 216us; 46us; 236us; 47us; 144us; 48us; 150us; 57us; 237us; 58us; 138us; 59us; 232us; 60us; 238us; 61us; 233us; 16us; 32768us; 6us; 132us; 8us; 196us; 9us; 199us; 15us; 208us; 24us; 210us; 25us; 142us; 35us; 234us; 36us; 216us; 46us; 236us; 47us; 144us; 48us; 150us; 57us; 237us; 58us; 138us; 59us; 232us; 60us; 238us; 61us; 233us; 16us; 32768us; 6us; 132us; 8us; 196us; 9us; 199us; 15us; 208us; 24us; 210us; 25us; 142us; 35us; 234us; 36us; 216us; 46us; 236us; 47us; 144us; 48us; 150us; 57us; 237us; 58us; 138us; 59us; 232us; 60us; 238us; 61us; 233us; 0us; 16451us; 3us; 32768us; 15us; 213us; 36us; 216us; 58us; 212us; 1us; 16452us; 19us; 219us; 0us; 16453us; 3us; 32768us; 15us; 213us; 36us; 216us; 58us; 212us; 1us; 16454us; 19us; 219us; 16us; 32768us; 6us; 132us; 8us; 196us; 9us; 199us; 15us; 208us; 24us; 210us; 25us; 142us; 35us; 234us; 36us; 216us; 46us; 236us; 47us; 144us; 48us; 150us; 57us; 237us; 58us; 138us; 59us; 232us; 60us; 238us; 61us; 233us; 16us; 32768us; 6us; 132us; 8us; 196us; 9us; 199us; 15us; 208us; 24us; 210us; 25us; 142us; 35us; 234us; 36us; 216us; 46us; 236us; 47us; 144us; 48us; 150us; 57us; 237us; 58us; 138us; 59us; 232us; 60us; 238us; 61us; 233us; 0us; 16457us; 0us; 16458us; 0us; 16459us; 0us; 16460us; 16us; 32768us; 6us; 132us; 8us; 196us; 9us; 199us; 15us; 208us; 24us; 210us; 25us; 142us; 35us; 234us; 36us; 216us; 46us; 236us; 47us; 144us; 48us; 150us; 57us; 237us; 58us; 138us; 59us; 232us; 60us; 238us; 61us; 233us; 16us; 32768us; 6us; 132us; 8us; 196us; 9us; 199us; 15us; 208us; 24us; 210us; 25us; 142us; 35us; 234us; 36us; 216us; 46us; 236us; 47us; 144us; 48us; 150us; 57us; 237us; 58us; 138us; 59us; 232us; 60us; 238us; 61us; 233us; 0us; 16461us; 3us; 32768us; 15us; 213us; 36us; 216us; 58us; 212us; 1us; 16462us; 19us; 219us; 0us; 16463us; 3us; 32768us; 15us; 213us; 36us; 216us; 58us; 212us; 2us; 32768us; 16us; 215us; 19us; 219us; 0us; 16464us; 10us; 32768us; 15us; 208us; 24us; 210us; 35us; 234us; 36us; 216us; 46us; 236us; 57us; 237us; 58us; 212us; 59us; 232us; 60us; 238us; 61us; 233us; 1us; 16465us; 19us; 219us; 0us; 16466us; 16us; 32768us; 6us; 132us; 8us; 196us; 9us; 199us; 15us; 208us; 24us; 210us; 25us; 142us; 35us; 234us; 36us; 216us; 46us; 236us; 47us; 144us; 48us; 150us; 57us; 237us; 58us; 138us; 59us; 232us; 60us; 238us; 61us; 233us; 0us; 16467us; 0us; 16469us; 16us; 32768us; 6us; 132us; 8us; 196us; 9us; 199us; 15us; 208us; 24us; 210us; 25us; 142us; 35us; 234us; 36us; 216us; 46us; 236us; 47us; 144us; 48us; 150us; 57us; 237us; 58us; 138us; 59us; 232us; 60us; 238us; 61us; 233us; 0us; 16471us; 8us; 32768us; 15us; 207us; 24us; 210us; 35us; 234us; 46us; 236us; 57us; 237us; 59us; 232us; 60us; 238us; 61us; 233us; 1us; 32768us; 11us; 226us; 25us; 32768us; 6us; 132us; 8us; 196us; 9us; 199us; 12us; 117us; 15us; 208us; 17us; 37us; 24us; 210us; 25us; 142us; 35us; 234us; 36us; 216us; 41us; 55us; 46us; 236us; 47us; 144us; 48us; 150us; 49us; 50us; 51us; 67us; 52us; 99us; 53us; 76us; 55us; 95us; 56us; 97us; 57us; 237us; 58us; 138us; 59us; 232us; 60us; 238us; 61us; 233us; 2us; 16472us; 13us; 224us; 14us; 228us; 1us; 32768us; 11us; 229us; 25us; 32768us; 6us; 132us; 8us; 196us; 9us; 199us; 12us; 117us; 15us; 208us; 17us; 37us; 24us; 210us; 25us; 142us; 35us; 234us; 36us; 216us; 41us; 55us; 46us; 236us; 47us; 144us; 48us; 150us; 49us; 50us; 51us; 67us; 52us; 99us; 53us; 76us; 55us; 95us; 56us; 97us; 57us; 237us; 58us; 138us; 59us; 232us; 60us; 238us; 61us; 233us; 0us; 16473us; 0us; 16474us; 0us; 16475us; 0us; 16476us; 2us; 32768us; 60us; 239us; 61us; 235us; 0us; 16477us; 0us; 16478us; 0us; 16479us; 0us; 16480us; 0us; 16481us; 0us; 16482us; 0us; 16483us; 0us; 16484us; 0us; 16485us; 0us; 16486us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 7us; 8us; 10us; 11us; 18us; 19us; 21us; 22us; 23us; 27us; 31us; 33us; 34us; 36us; 40us; 42us; 46us; 49us; 50us; 53us; 54us; 56us; 57us; 59us; 61us; 67us; 69us; 71us; 72us; 78us; 80us; 82us; 83us; 84us; 86us; 92us; 93us; 124us; 126us; 127us; 158us; 159us; 161us; 192us; 193us; 194us; 196us; 197us; 213us; 214us; 232us; 233us; 249us; 250us; 251us; 253us; 255us; 272us; 289us; 305us; 321us; 347us; 373us; 375us; 401us; 427us; 428us; 430us; 432us; 449us; 466us; 482us; 498us; 524us; 550us; 551us; 577us; 603us; 606us; 609us; 611us; 613us; 630us; 647us; 663us; 679us; 681us; 683us; 684us; 685us; 687us; 704us; 720us; 722us; 723us; 725us; 726us; 728us; 729us; 731us; 733us; 750us; 767us; 783us; 799us; 816us; 833us; 849us; 865us; 882us; 899us; 915us; 931us; 957us; 983us; 984us; 985us; 987us; 1004us; 1020us; 1022us; 1025us; 1027us; 1028us; 1029us; 1030us; 1031us; 1042us; 1052us; 1053us; 1055us; 1056us; 1058us; 1075us; 1091us; 1092us; 1109us; 1124us; 1126us; 1143us; 1145us; 1146us; 1163us; 1164us; 1166us; 1168us; 1170us; 1187us; 1203us; 1204us; 1206us; 1210us; 1213us; 1214us; 1218us; 1222us; 1223us; 1224us; 1225us; 1240us; 1255us; 1270us; 1285us; 1300us; 1310us; 1320us; 1330us; 1340us; 1350us; 1360us; 1376us; 1391us; 1403us; 1418us; 1431us; 1447us; 1463us; 1480us; 1497us; 1514us; 1531us; 1548us; 1565us; 1582us; 1599us; 1616us; 1633us; 1650us; 1667us; 1684us; 1701us; 1718us; 1735us; 1752us; 1769us; 1770us; 1774us; 1776us; 1777us; 1781us; 1783us; 1800us; 1817us; 1818us; 1819us; 1820us; 1821us; 1838us; 1855us; 1856us; 1860us; 1862us; 1863us; 1867us; 1870us; 1871us; 1882us; 1884us; 1885us; 1902us; 1903us; 1904us; 1921us; 1922us; 1931us; 1933us; 1959us; 1962us; 1964us; 1990us; 1991us; 1992us; 1993us; 1994us; 1997us; 1998us; 1999us; 2000us; 2001us; 2002us; 2003us; 2004us; 2005us; 2006us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 2us; 0us; 2us; 2us; 1us; 2us; 1us; 2us; 3us; 3us; 4us; 6us; 6us; 0us; 1us; 1us; 3us; 3us; 0us; 2us; 3us; 1us; 1us; 2us; 2us; 3us; 1us; 7us; 5us; 7us; 7us; 2us; 2us; 9us; 7us; 7us; 5us; 5us; 7us; 9us; 1us; 1us; 1us; 4us; 3us; 4us; 2us; 6us; 4us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 5us; 2us; 2us; 2us; 2us; 3us; 3us; 1us; 1us; 1us; 1us; 3us; 2us; 1us; 3us; 2us; 2us; 4us; 0us; 1us; 1us; 3us; 4us; 3us; 5us; 1us; 1us; 2us; 1us; 1us; 1us; 2us; 1us; 1us; 1us; 1us; 1us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 2us; 3us; 3us; 4us; 5us; 5us; 5us; 5us; 5us; 6us; 6us; 7us; 7us; 8us; 8us; 9us; 10us; 10us; 10us; 11us; 11us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 13us; 13us; 13us; 13us; 13us; 14us; 14us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 16us; 16us; 16us; 16us; 16us; 16us; 17us; 17us; 17us; 17us; 17us; 18us; 18us; 19us; 19us; 20us; 20us; 20us; 21us; 22us; 22us; 22us; 23us; 24us; 24us; 25us; 25us; 25us; 25us; 25us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 16385us; 65535us; 16387us; 65535us; 16388us; 16389us; 65535us; 65535us; 65535us; 16391us; 65535us; 65535us; 65535us; 65535us; 65535us; 16393us; 65535us; 16394us; 65535us; 16395us; 65535us; 65535us; 65535us; 65535us; 65535us; 16396us; 65535us; 65535us; 65535us; 16397us; 16399us; 65535us; 65535us; 16401us; 65535us; 65535us; 16402us; 65535us; 16404us; 65535us; 65535us; 16405us; 16406us; 65535us; 16407us; 65535us; 16408us; 65535us; 16409us; 65535us; 16410us; 16411us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16412us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16413us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16414us; 65535us; 65535us; 65535us; 65535us; 65535us; 16415us; 65535us; 16416us; 65535us; 16417us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16418us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16419us; 16420us; 16421us; 16422us; 65535us; 65535us; 16426us; 65535us; 16427us; 65535us; 65535us; 65535us; 16428us; 65535us; 65535us; 65535us; 65535us; 65535us; 16430us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16432us; 65535us; 65535us; 65535us; 16433us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16451us; 65535us; 65535us; 16453us; 65535us; 65535us; 65535us; 65535us; 16457us; 16458us; 16459us; 16460us; 65535us; 65535us; 16461us; 65535us; 65535us; 16463us; 65535us; 65535us; 16464us; 65535us; 65535us; 16466us; 65535us; 16467us; 16469us; 65535us; 16471us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16473us; 16474us; 16475us; 16476us; 65535us; 16477us; 16478us; 16479us; 16480us; 16481us; 16482us; 16483us; 16484us; 16485us; 16486us; |]
let _fsyacc_reductions ()  =    [| 
# 570 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Absyn.program in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startMain));
# 579 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 53 "CPar.fsy"
                                                               Prog _1 
                   )
# 53 "CPar.fsy"
                 : Absyn.program));
# 590 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 58 "CPar.fsy"
                                                               [] 
                   )
# 58 "CPar.fsy"
                 : 'gentype_Topdecs));
# 600 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdec in
            let _2 = parseState.GetInput(2) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 59 "CPar.fsy"
                                                               _1 :: _2 
                   )
# 59 "CPar.fsy"
                 : 'gentype_Topdecs));
# 612 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 63 "CPar.fsy"
                                                               Vardec (fst _1, snd _1) 
                   )
# 63 "CPar.fsy"
                 : 'gentype_Topdec));
# 623 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Fundec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 64 "CPar.fsy"
                                                               _1 
                   )
# 64 "CPar.fsy"
                 : 'gentype_Topdec));
# 634 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 82 "CPar.fsy"
                                                               ((fst _2) _1, snd _2) 
                   )
# 82 "CPar.fsy"
                 : 'gentype_Vardec));
# 646 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 93 "CPar.fsy"
                                                               ((fun t -> t), _1)                      
                   )
# 93 "CPar.fsy"
                 : 'gentype_Vardesc));
# 657 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 101 "CPar.fsy"
                                                               compose1 TypP _2                        
                   )
# 101 "CPar.fsy"
                 : 'gentype_Vardesc));
# 668 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 103 "CPar.fsy"
                                                               _2                                      
                   )
# 103 "CPar.fsy"
                 : 'gentype_Vardesc));
# 679 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 105 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, None)) _1    
                   )
# 105 "CPar.fsy"
                 : 'gentype_Vardesc));
# 690 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            let _3 = parseState.GetInput(3) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 107 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, Some _3)) _1 
                   )
# 107 "CPar.fsy"
                 : 'gentype_Vardesc));
# 702 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 112 "CPar.fsy"
                                                               Fundec(None,     _2, _4, _6) 
                   )
# 112 "CPar.fsy"
                 : 'gentype_Fundec));
# 715 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 114 "CPar.fsy"
                                                               Fundec(Some(_1), _2, _4, _6) 
                   )
# 114 "CPar.fsy"
                 : 'gentype_Fundec));
# 729 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 119 "CPar.fsy"
                                                               [] 
                   )
# 119 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 739 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 120 "CPar.fsy"
                                                               _1 
                   )
# 120 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 750 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 124 "CPar.fsy"
                                                               [_1]     
                   )
# 124 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 761 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 125 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 125 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 773 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 130 "CPar.fsy"
                                                               Block _2 
                   )
# 130 "CPar.fsy"
                 : 'gentype_Block));
# 784 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 134 "CPar.fsy"
                                                               [] 
                   )
# 134 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 794 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Stmt in
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 135 "CPar.fsy"
                                                               Stmt _1 :: _2 
                   )
# 135 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 806 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 136 "CPar.fsy"
                                                               Dec (fst _1, snd _1) :: _3 
                   )
# 136 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 818 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 140 "CPar.fsy"
                                                               _1 
                   )
# 140 "CPar.fsy"
                 : 'gentype_Stmt));
# 829 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 141 "CPar.fsy"
                                                               _1 
                   )
# 141 "CPar.fsy"
                 : 'gentype_Stmt));
# 840 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 145 "CPar.fsy"
                                                               Expr(_1)             
                   )
# 145 "CPar.fsy"
                 : 'gentype_StmtM));
# 851 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 146 "CPar.fsy"
                                                               Return None          
                   )
# 146 "CPar.fsy"
                 : 'gentype_StmtM));
# 861 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 147 "CPar.fsy"
                                                               Return(Some(_2))     
                   )
# 147 "CPar.fsy"
                 : 'gentype_StmtM));
# 872 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 148 "CPar.fsy"
                                                               _1                   
                   )
# 148 "CPar.fsy"
                 : 'gentype_StmtM));
# 883 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 149 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 149 "CPar.fsy"
                 : 'gentype_StmtM));
# 896 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 150 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 150 "CPar.fsy"
                 : 'gentype_StmtM));
# 908 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 151 "CPar.fsy"
                                                               DoWhile(_5, _2)      
                   )
# 151 "CPar.fsy"
                 : 'gentype_StmtM));
# 920 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 152 "CPar.fsy"
                                                               DoUntil(_5, _2)      
                   )
# 152 "CPar.fsy"
                 : 'gentype_StmtM));
# 932 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 153 "CPar.fsy"
                                                               Break             
                   )
# 153 "CPar.fsy"
                 : 'gentype_StmtM));
# 942 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 154 "CPar.fsy"
                                                               Continue          
                   )
# 154 "CPar.fsy"
                 : 'gentype_StmtM));
# 952 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            let _7 = parseState.GetInput(7) :?> 'gentype_Expr in
            let _9 = parseState.GetInput(9) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 155 "CPar.fsy"
                                                                             For(_3, _5, _7, _9) 
                   )
# 155 "CPar.fsy"
                 : 'gentype_StmtM));
# 966 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _6 = parseState.GetInput(6) :?> 'gentype_StmtCase in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 156 "CPar.fsy"
                                                                             Switch(_3,_6)       
                   )
# 156 "CPar.fsy"
                 : 'gentype_StmtM));
# 978 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 160 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 160 "CPar.fsy"
                 : 'gentype_StmtU));
# 991 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Stmt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 161 "CPar.fsy"
                                                               If(_3, _5, Block []) 
                   )
# 161 "CPar.fsy"
                 : 'gentype_StmtU));
# 1003 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 162 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 162 "CPar.fsy"
                 : 'gentype_StmtU));
# 1015 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 163 "CPar.fsy"
                                                               DoWhile(_5, _2)      
                   )
# 163 "CPar.fsy"
                 : 'gentype_StmtU));
# 1027 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            let _7 = parseState.GetInput(7) :?> 'gentype_Expr in
            let _9 = parseState.GetInput(9) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 164 "CPar.fsy"
                                                                             For(_3, _5, _7, _9) 
                   )
# 164 "CPar.fsy"
                 : 'gentype_StmtU));
# 1041 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 168 "CPar.fsy"
                                                               Access _1           
                   )
# 168 "CPar.fsy"
                 : 'gentype_Expr));
# 1052 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 169 "CPar.fsy"
                                                               _1                  
                   )
# 169 "CPar.fsy"
                 : 'gentype_Expr));
# 1063 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 173 "CPar.fsy"
                                                               _1                  
                   )
# 173 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1074 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 174 "CPar.fsy"
                                                               Sizeof(_3)          
                   )
# 174 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1085 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 175 "CPar.fsy"
                                                               Assign(_1, _3)      
                   )
# 175 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1097 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 176 "CPar.fsy"
                                                               Call(_1, _3)        
                   )
# 176 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1109 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 177 "CPar.fsy"
                                                               Prim1("!", _2)      
                   )
# 177 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1120 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> string in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 178 "CPar.fsy"
                                                               Print(_3, _5)       
                   )
# 178 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1132 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 179 "CPar.fsy"
                                                               Println(_3)         
                   )
# 179 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1143 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 180 "CPar.fsy"
                                                               Prim2("+",  _1, _3) 
                   )
# 180 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1155 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 181 "CPar.fsy"
                                                               Prim2("-",  _1, _3) 
                   )
# 181 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1167 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 182 "CPar.fsy"
                                                               Prim2("*",  _1, _3) 
                   )
# 182 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1179 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 183 "CPar.fsy"
                                                               Prim2("/",  _1, _3) 
                   )
# 183 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1191 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 184 "CPar.fsy"
                                                               Prim2("%",  _1, _3) 
                   )
# 184 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1203 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 185 "CPar.fsy"
                                                               Assign(_1, Prim2("+", Access _1, _3) ) 
                   )
# 185 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1215 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 186 "CPar.fsy"
                                                               Assign(_1, Prim2("-", Access _1, _3) ) 
                   )
# 186 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1227 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 187 "CPar.fsy"
                                                               Assign(_1, Prim2("*", Access _1, _3) ) 
                   )
# 187 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1239 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 188 "CPar.fsy"
                                                               Assign(_1, Prim2("/", Access _1, _3) ) 
                   )
# 188 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1251 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 189 "CPar.fsy"
                                                               Assign(_1, Prim2("%", Access _1, _3) ) 
                   )
# 189 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1263 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 190 "CPar.fsy"
                                                               Prim2("==", _1, _3) 
                   )
# 190 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1275 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 191 "CPar.fsy"
                                                               Prim2("!=", _1, _3) 
                   )
# 191 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1287 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 192 "CPar.fsy"
                                                               Prim2(">",  _1, _3) 
                   )
# 192 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1299 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 193 "CPar.fsy"
                                                               Prim2("<",  _1, _3) 
                   )
# 193 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1311 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 194 "CPar.fsy"
                                                               Prim2(">=", _1, _3) 
                   )
# 194 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1323 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 195 "CPar.fsy"
                                                               Prim2("<=", _1, _3) 
                   )
# 195 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1335 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 196 "CPar.fsy"
                                                               Prim3(_1, _3, _5)   
                   )
# 196 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1348 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 197 "CPar.fsy"
                                                               Assign(_1, Prim2("+",  Access _1, CstI (1))) 
                   )
# 197 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1359 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 198 "CPar.fsy"
                                                               Assign(_2, Prim2("+",  Access _2, CstI (1))) 
                   )
# 198 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1370 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 199 "CPar.fsy"
                                                               Assign(_1, Prim2("-",  Access _1, CstI (1))) 
                   )
# 199 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1381 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 200 "CPar.fsy"
                                                               Assign(_2, Prim2("-",  Access _2, CstI (1))) 
                   )
# 200 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1392 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 201 "CPar.fsy"
                                                               Andalso(_1, _3)     
                   )
# 201 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1404 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 202 "CPar.fsy"
                                                               Orelse(_1, _3)      
                   )
# 202 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1416 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ConstInt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 210 "CPar.fsy"
                                                               CstI _1             
                   )
# 210 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1427 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ConstString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 211 "CPar.fsy"
                                                               CstS(_1)            
                   )
# 211 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1438 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ConstFloat in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 212 "CPar.fsy"
                                                               CstF(_1)            
                   )
# 212 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1449 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ConstBool in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 213 "CPar.fsy"
                                                               CstB(_1)            
                   )
# 213 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1460 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 214 "CPar.fsy"
                                                               _2                  
                   )
# 214 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1471 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 215 "CPar.fsy"
                                                               Addr _2             
                   )
# 215 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1482 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 219 "CPar.fsy"
                                                               AccVar _1           
                   )
# 219 "CPar.fsy"
                 : 'gentype_Access));
# 1493 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 220 "CPar.fsy"
                                                               _2                  
                   )
# 220 "CPar.fsy"
                 : 'gentype_Access));
# 1504 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 221 "CPar.fsy"
                                                               AccDeref (Access _2)
                   )
# 221 "CPar.fsy"
                 : 'gentype_Access));
# 1515 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 222 "CPar.fsy"
                                                               AccDeref _2         
                   )
# 222 "CPar.fsy"
                 : 'gentype_Access));
# 1526 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 223 "CPar.fsy"
                                                               AccIndex(_1, _3)    
                   )
# 223 "CPar.fsy"
                 : 'gentype_Access));
# 1538 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 227 "CPar.fsy"
                                                               []       
                   )
# 227 "CPar.fsy"
                 : 'gentype_Exprs));
# 1548 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 228 "CPar.fsy"
                                                               _1       
                   )
# 228 "CPar.fsy"
                 : 'gentype_Exprs));
# 1559 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 232 "CPar.fsy"
                                                               [_1]     
                   )
# 232 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1570 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 233 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 233 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1582 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            let _4 = parseState.GetInput(4) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 237 "CPar.fsy"
                                                                          [Case(_2,_4)]    
                   )
# 237 "CPar.fsy"
                 : 'gentype_StmtCase));
# 1594 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 238 "CPar.fsy"
                                                                          [Default(_3)]    
                   )
# 238 "CPar.fsy"
                 : 'gentype_StmtCase));
# 1605 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            let _4 = parseState.GetInput(4) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtCase in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 239 "CPar.fsy"
                                                                          Case(_2,_4) :: _5
                   )
# 239 "CPar.fsy"
                 : 'gentype_StmtCase));
# 1618 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> bool in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 243 "CPar.fsy"
                                                               _1       
                   )
# 243 "CPar.fsy"
                 : 'gentype_ConstBool));
# 1629 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 247 "CPar.fsy"
                                                               _1       
                   )
# 247 "CPar.fsy"
                 : 'gentype_ConstInt));
# 1640 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 248 "CPar.fsy"
                                                               - _2     
                   )
# 248 "CPar.fsy"
                 : 'gentype_ConstInt));
# 1651 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 249 "CPar.fsy"
                                                               -1       
                   )
# 249 "CPar.fsy"
                 : 'gentype_ConstInt));
# 1661 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 253 "CPar.fsy"
                                                               _1       
                   )
# 253 "CPar.fsy"
                 : 'gentype_ConstString));
# 1672 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> float32 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 257 "CPar.fsy"
                                                               _1       
                   )
# 257 "CPar.fsy"
                 : 'gentype_ConstFloat));
# 1683 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> float32 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 258 "CPar.fsy"
                                                               - _2     
                   )
# 258 "CPar.fsy"
                 : 'gentype_ConstFloat));
# 1694 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 262 "CPar.fsy"
                                                               TypI     
                   )
# 262 "CPar.fsy"
                 : 'gentype_Type));
# 1704 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 263 "CPar.fsy"
                                                               TypC     
                   )
# 263 "CPar.fsy"
                 : 'gentype_Type));
# 1714 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 264 "CPar.fsy"
                                                               TypF     
                   )
# 264 "CPar.fsy"
                 : 'gentype_Type));
# 1724 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 265 "CPar.fsy"
                                                               TypB     
                   )
# 265 "CPar.fsy"
                 : 'gentype_Type));
# 1734 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 266 "CPar.fsy"
                                                               TypS     
                   )
# 266 "CPar.fsy"
                 : 'gentype_Type));
|]
# 1745 "CPar.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 65;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let Main lexer lexbuf : Absyn.program =
    engine lexer lexbuf 0 :?> _
