// Implementation file for parser generated by fsyacc
module CPar
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "CPar.fsy"

(*	File MicroC/CPar.fsy 
	Parser specification for micro-C, a small imperative language
	sestoft@itu.dk * 2009-09-29
	No (real) shift/reduce conflicts thanks to Niels Kokholm.
*)
open Absyn

// Vardesc 返回的是一个 元组 (g,s)
// g是类型构造函数，s是变量名
// compose1 函数 取出 类型构造子 g，用类型复合机制构造类型。

let compose1 f (g, s) = ((fun x -> g(f(x))), s)
let nl = CstI 10 //  \n 的 ASCII 码

# 22 "CPar.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | PLUS_ASSIGN
  | MINUS_ASSIGN
  | TIMES_ASSIGN
  | DIV_ASSIGN
  | MOD_ASSIGN
  | SIZEOF
  | TYPEOF
  | INC
  | DESC
  | QUE
  | COLON
  | LPAR
  | RPAR
  | LBRACE
  | RBRACE
  | LBRACK
  | RBRACK
  | SEMI
  | COMMA
  | ASSIGN
  | AMP
  | NOT
  | SEQOR
  | SEQAND
  | EQ
  | NE
  | GT
  | LT
  | GE
  | LE
  | PLUS
  | MINUS
  | TIMES
  | DIV
  | MOD
  | CHAR
  | ELSE
  | IF
  | INT
  | FLOAT
  | BOOL
  | STRING
  | NULL
  | PRINT
  | PRINTLN
  | RETURN
  | VOID
  | WHILE
  | FOR
  | DO
  | UNTIL
  | CSTSTRING of (string)
  | NAME of (string)
  | CSTBOOL of (bool)
  | CSTFLOAT of (float32)
  | CSTINT of (int)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_PLUS_ASSIGN
    | TOKEN_MINUS_ASSIGN
    | TOKEN_TIMES_ASSIGN
    | TOKEN_DIV_ASSIGN
    | TOKEN_MOD_ASSIGN
    | TOKEN_SIZEOF
    | TOKEN_TYPEOF
    | TOKEN_INC
    | TOKEN_DESC
    | TOKEN_QUE
    | TOKEN_COLON
    | TOKEN_LPAR
    | TOKEN_RPAR
    | TOKEN_LBRACE
    | TOKEN_RBRACE
    | TOKEN_LBRACK
    | TOKEN_RBRACK
    | TOKEN_SEMI
    | TOKEN_COMMA
    | TOKEN_ASSIGN
    | TOKEN_AMP
    | TOKEN_NOT
    | TOKEN_SEQOR
    | TOKEN_SEQAND
    | TOKEN_EQ
    | TOKEN_NE
    | TOKEN_GT
    | TOKEN_LT
    | TOKEN_GE
    | TOKEN_LE
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_TIMES
    | TOKEN_DIV
    | TOKEN_MOD
    | TOKEN_CHAR
    | TOKEN_ELSE
    | TOKEN_IF
    | TOKEN_INT
    | TOKEN_FLOAT
    | TOKEN_BOOL
    | TOKEN_STRING
    | TOKEN_NULL
    | TOKEN_PRINT
    | TOKEN_PRINTLN
    | TOKEN_RETURN
    | TOKEN_VOID
    | TOKEN_WHILE
    | TOKEN_FOR
    | TOKEN_DO
    | TOKEN_UNTIL
    | TOKEN_CSTSTRING
    | TOKEN_NAME
    | TOKEN_CSTBOOL
    | TOKEN_CSTFLOAT
    | TOKEN_CSTINT
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startMain
    | NONTERM_Main
    | NONTERM_Topdecs
    | NONTERM_Topdec
    | NONTERM_Vardec
    | NONTERM_Vardesc
    | NONTERM_Fundec
    | NONTERM_Paramdecs
    | NONTERM_Paramdecs1
    | NONTERM_Block
    | NONTERM_StmtOrDecSeq
    | NONTERM_Stmt
    | NONTERM_StmtM
    | NONTERM_StmtU
    | NONTERM_Expr
    | NONTERM_ExprNotAccess
    | NONTERM_AtExprNotAccess
    | NONTERM_Access
    | NONTERM_Exprs
    | NONTERM_Exprs1
    | NONTERM_ConstBool
    | NONTERM_ConstInt
    | NONTERM_ConstString
    | NONTERM_ConstFloat
    | NONTERM_Type

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | PLUS_ASSIGN  -> 1 
  | MINUS_ASSIGN  -> 2 
  | TIMES_ASSIGN  -> 3 
  | DIV_ASSIGN  -> 4 
  | MOD_ASSIGN  -> 5 
  | SIZEOF  -> 6 
  | TYPEOF  -> 7 
  | INC  -> 8 
  | DESC  -> 9 
  | QUE  -> 10 
  | COLON  -> 11 
  | LPAR  -> 12 
  | RPAR  -> 13 
  | LBRACE  -> 14 
  | RBRACE  -> 15 
  | LBRACK  -> 16 
  | RBRACK  -> 17 
  | SEMI  -> 18 
  | COMMA  -> 19 
  | ASSIGN  -> 20 
  | AMP  -> 21 
  | NOT  -> 22 
  | SEQOR  -> 23 
  | SEQAND  -> 24 
  | EQ  -> 25 
  | NE  -> 26 
  | GT  -> 27 
  | LT  -> 28 
  | GE  -> 29 
  | LE  -> 30 
  | PLUS  -> 31 
  | MINUS  -> 32 
  | TIMES  -> 33 
  | DIV  -> 34 
  | MOD  -> 35 
  | CHAR  -> 36 
  | ELSE  -> 37 
  | IF  -> 38 
  | INT  -> 39 
  | FLOAT  -> 40 
  | BOOL  -> 41 
  | STRING  -> 42 
  | NULL  -> 43 
  | PRINT  -> 44 
  | PRINTLN  -> 45 
  | RETURN  -> 46 
  | VOID  -> 47 
  | WHILE  -> 48 
  | FOR  -> 49 
  | DO  -> 50 
  | UNTIL  -> 51 
  | CSTSTRING _ -> 52 
  | NAME _ -> 53 
  | CSTBOOL _ -> 54 
  | CSTFLOAT _ -> 55 
  | CSTINT _ -> 56 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_PLUS_ASSIGN 
  | 2 -> TOKEN_MINUS_ASSIGN 
  | 3 -> TOKEN_TIMES_ASSIGN 
  | 4 -> TOKEN_DIV_ASSIGN 
  | 5 -> TOKEN_MOD_ASSIGN 
  | 6 -> TOKEN_SIZEOF 
  | 7 -> TOKEN_TYPEOF 
  | 8 -> TOKEN_INC 
  | 9 -> TOKEN_DESC 
  | 10 -> TOKEN_QUE 
  | 11 -> TOKEN_COLON 
  | 12 -> TOKEN_LPAR 
  | 13 -> TOKEN_RPAR 
  | 14 -> TOKEN_LBRACE 
  | 15 -> TOKEN_RBRACE 
  | 16 -> TOKEN_LBRACK 
  | 17 -> TOKEN_RBRACK 
  | 18 -> TOKEN_SEMI 
  | 19 -> TOKEN_COMMA 
  | 20 -> TOKEN_ASSIGN 
  | 21 -> TOKEN_AMP 
  | 22 -> TOKEN_NOT 
  | 23 -> TOKEN_SEQOR 
  | 24 -> TOKEN_SEQAND 
  | 25 -> TOKEN_EQ 
  | 26 -> TOKEN_NE 
  | 27 -> TOKEN_GT 
  | 28 -> TOKEN_LT 
  | 29 -> TOKEN_GE 
  | 30 -> TOKEN_LE 
  | 31 -> TOKEN_PLUS 
  | 32 -> TOKEN_MINUS 
  | 33 -> TOKEN_TIMES 
  | 34 -> TOKEN_DIV 
  | 35 -> TOKEN_MOD 
  | 36 -> TOKEN_CHAR 
  | 37 -> TOKEN_ELSE 
  | 38 -> TOKEN_IF 
  | 39 -> TOKEN_INT 
  | 40 -> TOKEN_FLOAT 
  | 41 -> TOKEN_BOOL 
  | 42 -> TOKEN_STRING 
  | 43 -> TOKEN_NULL 
  | 44 -> TOKEN_PRINT 
  | 45 -> TOKEN_PRINTLN 
  | 46 -> TOKEN_RETURN 
  | 47 -> TOKEN_VOID 
  | 48 -> TOKEN_WHILE 
  | 49 -> TOKEN_FOR 
  | 50 -> TOKEN_DO 
  | 51 -> TOKEN_UNTIL 
  | 52 -> TOKEN_CSTSTRING 
  | 53 -> TOKEN_NAME 
  | 54 -> TOKEN_CSTBOOL 
  | 55 -> TOKEN_CSTFLOAT 
  | 56 -> TOKEN_CSTINT 
  | 59 -> TOKEN_end_of_input
  | 57 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startMain 
    | 1 -> NONTERM_Main 
    | 2 -> NONTERM_Topdecs 
    | 3 -> NONTERM_Topdecs 
    | 4 -> NONTERM_Topdec 
    | 5 -> NONTERM_Topdec 
    | 6 -> NONTERM_Vardec 
    | 7 -> NONTERM_Vardesc 
    | 8 -> NONTERM_Vardesc 
    | 9 -> NONTERM_Vardesc 
    | 10 -> NONTERM_Vardesc 
    | 11 -> NONTERM_Vardesc 
    | 12 -> NONTERM_Fundec 
    | 13 -> NONTERM_Fundec 
    | 14 -> NONTERM_Paramdecs 
    | 15 -> NONTERM_Paramdecs 
    | 16 -> NONTERM_Paramdecs1 
    | 17 -> NONTERM_Paramdecs1 
    | 18 -> NONTERM_Block 
    | 19 -> NONTERM_StmtOrDecSeq 
    | 20 -> NONTERM_StmtOrDecSeq 
    | 21 -> NONTERM_StmtOrDecSeq 
    | 22 -> NONTERM_Stmt 
    | 23 -> NONTERM_Stmt 
    | 24 -> NONTERM_StmtM 
    | 25 -> NONTERM_StmtM 
    | 26 -> NONTERM_StmtM 
    | 27 -> NONTERM_StmtM 
    | 28 -> NONTERM_StmtM 
    | 29 -> NONTERM_StmtM 
    | 30 -> NONTERM_StmtM 
    | 31 -> NONTERM_StmtM 
    | 32 -> NONTERM_StmtM 
    | 33 -> NONTERM_StmtU 
    | 34 -> NONTERM_StmtU 
    | 35 -> NONTERM_StmtU 
    | 36 -> NONTERM_StmtU 
    | 37 -> NONTERM_StmtU 
    | 38 -> NONTERM_Expr 
    | 39 -> NONTERM_Expr 
    | 40 -> NONTERM_ExprNotAccess 
    | 41 -> NONTERM_ExprNotAccess 
    | 42 -> NONTERM_ExprNotAccess 
    | 43 -> NONTERM_ExprNotAccess 
    | 44 -> NONTERM_ExprNotAccess 
    | 45 -> NONTERM_ExprNotAccess 
    | 46 -> NONTERM_ExprNotAccess 
    | 47 -> NONTERM_ExprNotAccess 
    | 48 -> NONTERM_ExprNotAccess 
    | 49 -> NONTERM_ExprNotAccess 
    | 50 -> NONTERM_ExprNotAccess 
    | 51 -> NONTERM_ExprNotAccess 
    | 52 -> NONTERM_ExprNotAccess 
    | 53 -> NONTERM_ExprNotAccess 
    | 54 -> NONTERM_ExprNotAccess 
    | 55 -> NONTERM_ExprNotAccess 
    | 56 -> NONTERM_ExprNotAccess 
    | 57 -> NONTERM_ExprNotAccess 
    | 58 -> NONTERM_ExprNotAccess 
    | 59 -> NONTERM_ExprNotAccess 
    | 60 -> NONTERM_ExprNotAccess 
    | 61 -> NONTERM_ExprNotAccess 
    | 62 -> NONTERM_ExprNotAccess 
    | 63 -> NONTERM_ExprNotAccess 
    | 64 -> NONTERM_ExprNotAccess 
    | 65 -> NONTERM_ExprNotAccess 
    | 66 -> NONTERM_ExprNotAccess 
    | 67 -> NONTERM_ExprNotAccess 
    | 68 -> NONTERM_ExprNotAccess 
    | 69 -> NONTERM_ExprNotAccess 
    | 70 -> NONTERM_AtExprNotAccess 
    | 71 -> NONTERM_AtExprNotAccess 
    | 72 -> NONTERM_AtExprNotAccess 
    | 73 -> NONTERM_AtExprNotAccess 
    | 74 -> NONTERM_AtExprNotAccess 
    | 75 -> NONTERM_AtExprNotAccess 
    | 76 -> NONTERM_Access 
    | 77 -> NONTERM_Access 
    | 78 -> NONTERM_Access 
    | 79 -> NONTERM_Access 
    | 80 -> NONTERM_Access 
    | 81 -> NONTERM_Exprs 
    | 82 -> NONTERM_Exprs 
    | 83 -> NONTERM_Exprs1 
    | 84 -> NONTERM_Exprs1 
    | 85 -> NONTERM_ConstBool 
    | 86 -> NONTERM_ConstInt 
    | 87 -> NONTERM_ConstInt 
    | 88 -> NONTERM_ConstInt 
    | 89 -> NONTERM_ConstString 
    | 90 -> NONTERM_ConstFloat 
    | 91 -> NONTERM_ConstFloat 
    | 92 -> NONTERM_Type 
    | 93 -> NONTERM_Type 
    | 94 -> NONTERM_Type 
    | 95 -> NONTERM_Type 
    | 96 -> NONTERM_Type 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 59 
let _fsyacc_tagOfErrorTerminal = 57

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | PLUS_ASSIGN  -> "PLUS_ASSIGN" 
  | MINUS_ASSIGN  -> "MINUS_ASSIGN" 
  | TIMES_ASSIGN  -> "TIMES_ASSIGN" 
  | DIV_ASSIGN  -> "DIV_ASSIGN" 
  | MOD_ASSIGN  -> "MOD_ASSIGN" 
  | SIZEOF  -> "SIZEOF" 
  | TYPEOF  -> "TYPEOF" 
  | INC  -> "INC" 
  | DESC  -> "DESC" 
  | QUE  -> "QUE" 
  | COLON  -> "COLON" 
  | LPAR  -> "LPAR" 
  | RPAR  -> "RPAR" 
  | LBRACE  -> "LBRACE" 
  | RBRACE  -> "RBRACE" 
  | LBRACK  -> "LBRACK" 
  | RBRACK  -> "RBRACK" 
  | SEMI  -> "SEMI" 
  | COMMA  -> "COMMA" 
  | ASSIGN  -> "ASSIGN" 
  | AMP  -> "AMP" 
  | NOT  -> "NOT" 
  | SEQOR  -> "SEQOR" 
  | SEQAND  -> "SEQAND" 
  | EQ  -> "EQ" 
  | NE  -> "NE" 
  | GT  -> "GT" 
  | LT  -> "LT" 
  | GE  -> "GE" 
  | LE  -> "LE" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | TIMES  -> "TIMES" 
  | DIV  -> "DIV" 
  | MOD  -> "MOD" 
  | CHAR  -> "CHAR" 
  | ELSE  -> "ELSE" 
  | IF  -> "IF" 
  | INT  -> "INT" 
  | FLOAT  -> "FLOAT" 
  | BOOL  -> "BOOL" 
  | STRING  -> "STRING" 
  | NULL  -> "NULL" 
  | PRINT  -> "PRINT" 
  | PRINTLN  -> "PRINTLN" 
  | RETURN  -> "RETURN" 
  | VOID  -> "VOID" 
  | WHILE  -> "WHILE" 
  | FOR  -> "FOR" 
  | DO  -> "DO" 
  | UNTIL  -> "UNTIL" 
  | CSTSTRING _ -> "CSTSTRING" 
  | NAME _ -> "NAME" 
  | CSTBOOL _ -> "CSTBOOL" 
  | CSTFLOAT _ -> "CSTFLOAT" 
  | CSTINT _ -> "CSTINT" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | PLUS_ASSIGN  -> (null : System.Object) 
  | MINUS_ASSIGN  -> (null : System.Object) 
  | TIMES_ASSIGN  -> (null : System.Object) 
  | DIV_ASSIGN  -> (null : System.Object) 
  | MOD_ASSIGN  -> (null : System.Object) 
  | SIZEOF  -> (null : System.Object) 
  | TYPEOF  -> (null : System.Object) 
  | INC  -> (null : System.Object) 
  | DESC  -> (null : System.Object) 
  | QUE  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | LPAR  -> (null : System.Object) 
  | RPAR  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | SEMI  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | ASSIGN  -> (null : System.Object) 
  | AMP  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | SEQOR  -> (null : System.Object) 
  | SEQAND  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | NE  -> (null : System.Object) 
  | GT  -> (null : System.Object) 
  | LT  -> (null : System.Object) 
  | GE  -> (null : System.Object) 
  | LE  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | TIMES  -> (null : System.Object) 
  | DIV  -> (null : System.Object) 
  | MOD  -> (null : System.Object) 
  | CHAR  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | INT  -> (null : System.Object) 
  | FLOAT  -> (null : System.Object) 
  | BOOL  -> (null : System.Object) 
  | STRING  -> (null : System.Object) 
  | NULL  -> (null : System.Object) 
  | PRINT  -> (null : System.Object) 
  | PRINTLN  -> (null : System.Object) 
  | RETURN  -> (null : System.Object) 
  | VOID  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | DO  -> (null : System.Object) 
  | UNTIL  -> (null : System.Object) 
  | CSTSTRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTBOOL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTFLOAT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 2us; 65535us; 0us; 2us; 4us; 5us; 2us; 65535us; 0us; 4us; 4us; 4us; 8us; 65535us; 0us; 6us; 4us; 6us; 25us; 34us; 29us; 34us; 35us; 34us; 37us; 42us; 40us; 42us; 43us; 42us; 4us; 65535us; 9us; 11us; 10us; 11us; 14us; 15us; 16us; 17us; 2us; 65535us; 0us; 8us; 4us; 8us; 2us; 65535us; 25us; 26us; 29us; 30us; 3us; 65535us; 25us; 33us; 29us; 33us; 35us; 36us; 15us; 65535us; 27us; 28us; 31us; 32us; 37us; 54us; 40us; 54us; 43us; 54us; 61us; 54us; 62us; 54us; 64us; 54us; 65us; 54us; 73us; 54us; 74us; 54us; 76us; 54us; 77us; 54us; 109us; 54us; 110us; 54us; 3us; 65535us; 37us; 38us; 40us; 41us; 43us; 44us; 4us; 65535us; 37us; 40us; 40us; 40us; 43us; 40us; 62us; 114us; 13us; 65535us; 37us; 45us; 40us; 45us; 43us; 45us; 61us; 63us; 62us; 46us; 64us; 66us; 65us; 66us; 73us; 75us; 74us; 75us; 76us; 78us; 77us; 79us; 109us; 111us; 110us; 112us; 6us; 65535us; 37us; 47us; 40us; 47us; 43us; 47us; 62us; 47us; 65us; 113us; 74us; 115us; 55us; 65535us; 37us; 48us; 40us; 48us; 43us; 48us; 50us; 52us; 57us; 60us; 58us; 59us; 61us; 48us; 62us; 48us; 64us; 48us; 65us; 48us; 69us; 72us; 70us; 71us; 73us; 48us; 74us; 48us; 76us; 48us; 77us; 48us; 82us; 85us; 83us; 84us; 91us; 92us; 97us; 100us; 98us; 99us; 101us; 104us; 102us; 103us; 105us; 108us; 106us; 107us; 109us; 48us; 110us; 48us; 122us; 123us; 125us; 126us; 128us; 165us; 131us; 132us; 136us; 137us; 166us; 143us; 167us; 144us; 168us; 145us; 169us; 146us; 170us; 147us; 171us; 148us; 172us; 149us; 173us; 150us; 174us; 151us; 175us; 152us; 176us; 153us; 177us; 154us; 178us; 155us; 179us; 156us; 180us; 157us; 181us; 158us; 182us; 159us; 183us; 160us; 190us; 161us; 191us; 163us; 196us; 162us; 207us; 164us; 210us; 165us; 55us; 65535us; 37us; 118us; 40us; 118us; 43us; 118us; 50us; 118us; 57us; 118us; 58us; 118us; 61us; 118us; 62us; 118us; 64us; 118us; 65us; 118us; 69us; 118us; 70us; 118us; 73us; 118us; 74us; 118us; 76us; 118us; 77us; 118us; 82us; 118us; 83us; 118us; 91us; 118us; 97us; 118us; 98us; 118us; 101us; 118us; 102us; 118us; 105us; 118us; 106us; 118us; 109us; 118us; 110us; 118us; 122us; 118us; 125us; 118us; 128us; 118us; 131us; 118us; 136us; 118us; 166us; 118us; 167us; 118us; 168us; 118us; 169us; 118us; 170us; 118us; 171us; 118us; 172us; 118us; 173us; 118us; 174us; 118us; 175us; 118us; 176us; 118us; 177us; 118us; 178us; 118us; 179us; 118us; 180us; 118us; 181us; 118us; 182us; 118us; 183us; 118us; 190us; 118us; 191us; 118us; 196us; 119us; 207us; 118us; 210us; 118us; 56us; 65535us; 37us; 120us; 40us; 120us; 43us; 120us; 50us; 120us; 57us; 120us; 58us; 120us; 61us; 120us; 62us; 120us; 64us; 120us; 65us; 120us; 69us; 120us; 70us; 120us; 73us; 120us; 74us; 120us; 76us; 120us; 77us; 120us; 82us; 120us; 83us; 120us; 91us; 120us; 97us; 120us; 98us; 120us; 101us; 120us; 102us; 120us; 105us; 120us; 106us; 120us; 109us; 120us; 110us; 120us; 122us; 120us; 125us; 120us; 128us; 120us; 131us; 120us; 136us; 120us; 166us; 120us; 167us; 120us; 168us; 120us; 169us; 120us; 170us; 120us; 171us; 120us; 172us; 120us; 173us; 120us; 174us; 120us; 175us; 120us; 176us; 120us; 177us; 120us; 178us; 120us; 179us; 120us; 180us; 120us; 181us; 120us; 182us; 120us; 183us; 120us; 190us; 120us; 191us; 120us; 196us; 120us; 204us; 206us; 207us; 120us; 210us; 120us; 61us; 65535us; 37us; 117us; 40us; 117us; 43us; 117us; 50us; 117us; 57us; 117us; 58us; 117us; 61us; 117us; 62us; 117us; 64us; 117us; 65us; 117us; 69us; 117us; 70us; 117us; 73us; 117us; 74us; 117us; 76us; 117us; 77us; 117us; 82us; 117us; 83us; 117us; 91us; 117us; 97us; 117us; 98us; 117us; 101us; 117us; 102us; 117us; 105us; 117us; 106us; 117us; 109us; 117us; 110us; 117us; 122us; 117us; 125us; 117us; 128us; 117us; 131us; 117us; 136us; 117us; 140us; 141us; 166us; 117us; 167us; 117us; 168us; 117us; 169us; 117us; 170us; 117us; 171us; 117us; 172us; 117us; 173us; 117us; 174us; 117us; 175us; 117us; 176us; 117us; 177us; 117us; 178us; 117us; 179us; 117us; 180us; 117us; 181us; 117us; 182us; 117us; 183us; 117us; 185us; 186us; 188us; 189us; 190us; 117us; 191us; 117us; 196us; 116us; 198us; 199us; 201us; 202us; 204us; 205us; 207us; 117us; 210us; 117us; 1us; 65535us; 128us; 129us; 2us; 65535us; 128us; 209us; 210us; 211us; 56us; 65535us; 37us; 195us; 40us; 195us; 43us; 195us; 50us; 195us; 57us; 195us; 58us; 195us; 61us; 195us; 62us; 195us; 64us; 195us; 65us; 195us; 69us; 195us; 70us; 195us; 73us; 195us; 74us; 195us; 76us; 195us; 77us; 195us; 82us; 195us; 83us; 195us; 91us; 195us; 97us; 195us; 98us; 195us; 101us; 195us; 102us; 195us; 105us; 195us; 106us; 195us; 109us; 195us; 110us; 195us; 122us; 195us; 125us; 195us; 128us; 195us; 131us; 195us; 136us; 195us; 166us; 195us; 167us; 195us; 168us; 195us; 169us; 195us; 170us; 195us; 171us; 195us; 172us; 195us; 173us; 195us; 174us; 195us; 175us; 195us; 176us; 195us; 177us; 195us; 178us; 195us; 179us; 195us; 180us; 195us; 181us; 195us; 182us; 195us; 183us; 195us; 190us; 195us; 191us; 195us; 196us; 195us; 204us; 195us; 207us; 195us; 210us; 195us; 56us; 65535us; 37us; 192us; 40us; 192us; 43us; 192us; 50us; 192us; 57us; 192us; 58us; 192us; 61us; 192us; 62us; 192us; 64us; 192us; 65us; 192us; 69us; 192us; 70us; 192us; 73us; 192us; 74us; 192us; 76us; 192us; 77us; 192us; 82us; 192us; 83us; 192us; 91us; 192us; 97us; 192us; 98us; 192us; 101us; 192us; 102us; 192us; 105us; 192us; 106us; 192us; 109us; 192us; 110us; 192us; 122us; 192us; 125us; 192us; 128us; 192us; 131us; 192us; 136us; 192us; 166us; 192us; 167us; 192us; 168us; 192us; 169us; 192us; 170us; 192us; 171us; 192us; 172us; 192us; 173us; 192us; 174us; 192us; 175us; 192us; 176us; 192us; 177us; 192us; 178us; 192us; 179us; 192us; 180us; 192us; 181us; 192us; 182us; 192us; 183us; 192us; 190us; 192us; 191us; 192us; 196us; 192us; 204us; 192us; 207us; 192us; 210us; 192us; 56us; 65535us; 37us; 193us; 40us; 193us; 43us; 193us; 50us; 193us; 57us; 193us; 58us; 193us; 61us; 193us; 62us; 193us; 64us; 193us; 65us; 193us; 69us; 193us; 70us; 193us; 73us; 193us; 74us; 193us; 76us; 193us; 77us; 193us; 82us; 193us; 83us; 193us; 91us; 193us; 97us; 193us; 98us; 193us; 101us; 193us; 102us; 193us; 105us; 193us; 106us; 193us; 109us; 193us; 110us; 193us; 122us; 193us; 125us; 193us; 128us; 193us; 131us; 193us; 136us; 193us; 166us; 193us; 167us; 193us; 168us; 193us; 169us; 193us; 170us; 193us; 171us; 193us; 172us; 193us; 173us; 193us; 174us; 193us; 175us; 193us; 176us; 193us; 177us; 193us; 178us; 193us; 179us; 193us; 180us; 193us; 181us; 193us; 182us; 193us; 183us; 193us; 190us; 193us; 191us; 193us; 196us; 193us; 204us; 193us; 207us; 193us; 210us; 193us; 56us; 65535us; 37us; 194us; 40us; 194us; 43us; 194us; 50us; 194us; 57us; 194us; 58us; 194us; 61us; 194us; 62us; 194us; 64us; 194us; 65us; 194us; 69us; 194us; 70us; 194us; 73us; 194us; 74us; 194us; 76us; 194us; 77us; 194us; 82us; 194us; 83us; 194us; 91us; 194us; 97us; 194us; 98us; 194us; 101us; 194us; 102us; 194us; 105us; 194us; 106us; 194us; 109us; 194us; 110us; 194us; 122us; 194us; 125us; 194us; 128us; 194us; 131us; 194us; 136us; 194us; 166us; 194us; 167us; 194us; 168us; 194us; 169us; 194us; 170us; 194us; 171us; 194us; 172us; 194us; 173us; 194us; 174us; 194us; 175us; 194us; 176us; 194us; 177us; 194us; 178us; 194us; 179us; 194us; 180us; 194us; 181us; 194us; 182us; 194us; 183us; 194us; 190us; 194us; 191us; 194us; 196us; 194us; 204us; 194us; 207us; 194us; 210us; 194us; 8us; 65535us; 0us; 10us; 4us; 10us; 25us; 9us; 29us; 9us; 35us; 9us; 37us; 9us; 40us; 9us; 43us; 9us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 6us; 9us; 18us; 23us; 26us; 29us; 33us; 49us; 53us; 58us; 72us; 79us; 135us; 191us; 248us; 310us; 312us; 315us; 372us; 429us; 486us; 543us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 3us; 1us; 3us; 1us; 4us; 1us; 4us; 1us; 5us; 1us; 6us; 2us; 6us; 13us; 3us; 6us; 10us; 11us; 1us; 7us; 2us; 7us; 13us; 1us; 8us; 3us; 8us; 10us; 11us; 1us; 9us; 3us; 9us; 10us; 11us; 1us; 9us; 2us; 10us; 11us; 1us; 10us; 1us; 11us; 1us; 11us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 15us; 2us; 16us; 17us; 1us; 17us; 1us; 17us; 1us; 18us; 1us; 18us; 1us; 18us; 1us; 20us; 1us; 20us; 1us; 21us; 1us; 21us; 1us; 21us; 1us; 22us; 3us; 22us; 28us; 33us; 1us; 23us; 15us; 24us; 47us; 48us; 49us; 50us; 51us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 68us; 69us; 1us; 24us; 2us; 25us; 26us; 1us; 25us; 15us; 26us; 47us; 48us; 49us; 50us; 51us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 68us; 69us; 1us; 26us; 1us; 27us; 1us; 28us; 3us; 28us; 33us; 34us; 1us; 28us; 3us; 28us; 33us; 34us; 17us; 28us; 33us; 34us; 47us; 48us; 49us; 50us; 51us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 68us; 69us; 15us; 28us; 47us; 48us; 49us; 50us; 51us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 68us; 69us; 1us; 28us; 3us; 28us; 33us; 34us; 1us; 28us; 1us; 28us; 2us; 28us; 33us; 1us; 28us; 1us; 29us; 2us; 29us; 35us; 1us; 29us; 2us; 29us; 35us; 16us; 29us; 35us; 47us; 48us; 49us; 50us; 51us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 68us; 69us; 15us; 29us; 47us; 48us; 49us; 50us; 51us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 68us; 69us; 1us; 29us; 2us; 29us; 35us; 1us; 29us; 2us; 30us; 31us; 3us; 30us; 31us; 36us; 2us; 30us; 31us; 3us; 30us; 31us; 36us; 1us; 30us; 2us; 30us; 36us; 1us; 30us; 2us; 30us; 36us; 16us; 30us; 36us; 47us; 48us; 49us; 50us; 51us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 68us; 69us; 15us; 30us; 47us; 48us; 49us; 50us; 51us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 68us; 69us; 1us; 30us; 2us; 30us; 36us; 1us; 30us; 2us; 30us; 36us; 1us; 31us; 1us; 31us; 15us; 31us; 47us; 48us; 49us; 50us; 51us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 68us; 69us; 1us; 31us; 1us; 31us; 1us; 32us; 2us; 32us; 37us; 1us; 32us; 2us; 32us; 37us; 16us; 32us; 37us; 47us; 48us; 49us; 50us; 51us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 68us; 69us; 15us; 32us; 47us; 48us; 49us; 50us; 51us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 68us; 69us; 1us; 32us; 2us; 32us; 37us; 16us; 32us; 37us; 47us; 48us; 49us; 50us; 51us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 68us; 69us; 15us; 32us; 47us; 48us; 49us; 50us; 51us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 68us; 69us; 1us; 32us; 2us; 32us; 37us; 16us; 32us; 37us; 47us; 48us; 49us; 50us; 51us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 68us; 69us; 15us; 32us; 47us; 48us; 49us; 50us; 51us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 68us; 69us; 1us; 32us; 2us; 32us; 37us; 1us; 32us; 2us; 32us; 37us; 1us; 33us; 1us; 34us; 1us; 35us; 11us; 38us; 42us; 52us; 53us; 54us; 55us; 56us; 64us; 66us; 77us; 80us; 10us; 38us; 42us; 52us; 53us; 54us; 55us; 56us; 64us; 66us; 80us; 1us; 39us; 2us; 39us; 74us; 1us; 40us; 1us; 41us; 1us; 41us; 15us; 41us; 47us; 48us; 49us; 50us; 51us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 68us; 69us; 1us; 41us; 1us; 42us; 15us; 42us; 47us; 48us; 49us; 50us; 51us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 68us; 69us; 2us; 43us; 76us; 1us; 43us; 1us; 43us; 1us; 43us; 1us; 44us; 15us; 44us; 47us; 48us; 49us; 50us; 51us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 68us; 69us; 1us; 45us; 1us; 45us; 1us; 45us; 1us; 45us; 15us; 45us; 47us; 48us; 49us; 50us; 51us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 68us; 69us; 1us; 45us; 1us; 46us; 1us; 46us; 2us; 46us; 80us; 1us; 46us; 15us; 47us; 47us; 48us; 49us; 50us; 51us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 68us; 69us; 15us; 47us; 48us; 48us; 49us; 50us; 51us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 68us; 69us; 15us; 47us; 48us; 49us; 49us; 50us; 51us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 68us; 69us; 15us; 47us; 48us; 49us; 50us; 50us; 51us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 68us; 69us; 15us; 47us; 48us; 49us; 50us; 51us; 51us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 68us; 69us; 15us; 47us; 48us; 49us; 50us; 51us; 52us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 68us; 69us; 15us; 47us; 48us; 49us; 50us; 51us; 53us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 68us; 69us; 15us; 47us; 48us; 49us; 50us; 51us; 54us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 68us; 69us; 15us; 47us; 48us; 49us; 50us; 51us; 55us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 68us; 69us; 15us; 47us; 48us; 49us; 50us; 51us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 68us; 69us; 15us; 47us; 48us; 49us; 50us; 51us; 57us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 68us; 69us; 15us; 47us; 48us; 49us; 50us; 51us; 57us; 58us; 58us; 59us; 60us; 61us; 62us; 63us; 68us; 69us; 15us; 47us; 48us; 49us; 50us; 51us; 57us; 58us; 59us; 59us; 60us; 61us; 62us; 63us; 68us; 69us; 15us; 47us; 48us; 49us; 50us; 51us; 57us; 58us; 59us; 60us; 60us; 61us; 62us; 63us; 68us; 69us; 15us; 47us; 48us; 49us; 50us; 51us; 57us; 58us; 59us; 60us; 61us; 61us; 62us; 63us; 68us; 69us; 15us; 47us; 48us; 49us; 50us; 51us; 57us; 58us; 59us; 60us; 61us; 62us; 62us; 63us; 68us; 69us; 15us; 47us; 48us; 49us; 50us; 51us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 63us; 68us; 69us; 15us; 47us; 48us; 49us; 50us; 51us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 63us; 68us; 69us; 15us; 47us; 48us; 49us; 50us; 51us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 68us; 68us; 69us; 14us; 47us; 48us; 49us; 50us; 51us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 68us; 69us; 15us; 47us; 48us; 49us; 50us; 51us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 68us; 69us; 69us; 15us; 47us; 48us; 49us; 50us; 51us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 68us; 69us; 80us; 16us; 47us; 48us; 49us; 50us; 51us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 68us; 69us; 83us; 84us; 1us; 47us; 1us; 48us; 1us; 49us; 1us; 50us; 1us; 51us; 1us; 52us; 1us; 53us; 1us; 54us; 1us; 55us; 1us; 56us; 1us; 57us; 1us; 58us; 1us; 59us; 1us; 60us; 1us; 61us; 1us; 62us; 1us; 63us; 1us; 63us; 1us; 64us; 1us; 65us; 2us; 65us; 80us; 1us; 66us; 1us; 67us; 2us; 67us; 80us; 1us; 68us; 1us; 69us; 1us; 70us; 1us; 71us; 1us; 72us; 1us; 73us; 2us; 74us; 77us; 1us; 74us; 1us; 75us; 2us; 75us; 80us; 1us; 76us; 1us; 77us; 2us; 77us; 80us; 1us; 77us; 2us; 78us; 79us; 2us; 78us; 80us; 1us; 79us; 1us; 80us; 1us; 80us; 1us; 82us; 1us; 84us; 1us; 84us; 1us; 85us; 1us; 86us; 2us; 87us; 91us; 1us; 87us; 1us; 88us; 1us; 89us; 1us; 90us; 1us; 91us; 1us; 92us; 1us; 93us; 1us; 94us; 1us; 95us; 1us; 96us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 12us; 14us; 16us; 18us; 20us; 23us; 27us; 29us; 32us; 34us; 38us; 40us; 44us; 46us; 49us; 51us; 53us; 55us; 57us; 59us; 61us; 63us; 65us; 67us; 69us; 71us; 73us; 75us; 77us; 80us; 82us; 84us; 86us; 88us; 90us; 92us; 94us; 96us; 98us; 100us; 102us; 106us; 108us; 124us; 126us; 129us; 131us; 147us; 149us; 151us; 153us; 157us; 159us; 163us; 181us; 197us; 199us; 203us; 205us; 207us; 210us; 212us; 214us; 217us; 219us; 222us; 239us; 255us; 257us; 260us; 262us; 265us; 269us; 272us; 276us; 278us; 281us; 283us; 286us; 303us; 319us; 321us; 324us; 326us; 329us; 331us; 333us; 349us; 351us; 353us; 355us; 358us; 360us; 363us; 380us; 396us; 398us; 401us; 418us; 434us; 436us; 439us; 456us; 472us; 474us; 477us; 479us; 482us; 484us; 486us; 488us; 500us; 511us; 513us; 516us; 518us; 520us; 522us; 538us; 540us; 542us; 558us; 561us; 563us; 565us; 567us; 569us; 585us; 587us; 589us; 591us; 593us; 609us; 611us; 613us; 615us; 618us; 620us; 636us; 652us; 668us; 684us; 700us; 716us; 732us; 748us; 764us; 780us; 796us; 812us; 828us; 844us; 860us; 876us; 892us; 908us; 924us; 939us; 955us; 971us; 988us; 990us; 992us; 994us; 996us; 998us; 1000us; 1002us; 1004us; 1006us; 1008us; 1010us; 1012us; 1014us; 1016us; 1018us; 1020us; 1022us; 1024us; 1026us; 1028us; 1031us; 1033us; 1035us; 1038us; 1040us; 1042us; 1044us; 1046us; 1048us; 1050us; 1053us; 1055us; 1057us; 1060us; 1062us; 1064us; 1067us; 1069us; 1072us; 1075us; 1077us; 1079us; 1081us; 1083us; 1085us; 1087us; 1089us; 1091us; 1094us; 1096us; 1098us; 1100us; 1102us; 1104us; 1106us; 1108us; 1110us; 1112us; |]
let _fsyacc_action_rows = 225
let _fsyacc_actionTableElements = [|6us; 16386us; 36us; 221us; 39us; 220us; 40us; 222us; 41us; 223us; 42us; 224us; 47us; 23us; 0us; 49152us; 1us; 32768us; 0us; 3us; 0us; 16385us; 6us; 16386us; 36us; 221us; 39us; 220us; 40us; 222us; 41us; 223us; 42us; 224us; 47us; 23us; 0us; 16387us; 1us; 32768us; 18us; 7us; 0us; 16388us; 0us; 16389us; 3us; 32768us; 12us; 16us; 33us; 14us; 53us; 12us; 3us; 32768us; 12us; 16us; 33us; 14us; 53us; 13us; 1us; 16390us; 16us; 19us; 0us; 16391us; 1us; 16391us; 12us; 29us; 3us; 32768us; 12us; 16us; 33us; 14us; 53us; 12us; 1us; 16392us; 16us; 19us; 3us; 32768us; 12us; 16us; 33us; 14us; 53us; 12us; 2us; 32768us; 13us; 18us; 16us; 19us; 0us; 16393us; 2us; 32768us; 17us; 20us; 56us; 21us; 0us; 16394us; 1us; 32768us; 17us; 22us; 0us; 16395us; 1us; 32768us; 53us; 24us; 1us; 32768us; 12us; 25us; 5us; 16398us; 36us; 221us; 39us; 220us; 40us; 222us; 41us; 223us; 42us; 224us; 1us; 32768us; 13us; 27us; 1us; 32768us; 14us; 37us; 0us; 16396us; 5us; 16398us; 36us; 221us; 39us; 220us; 40us; 222us; 41us; 223us; 42us; 224us; 1us; 32768us; 13us; 31us; 1us; 32768us; 14us; 37us; 0us; 16397us; 0us; 16399us; 1us; 16400us; 19us; 35us; 5us; 32768us; 36us; 221us; 39us; 220us; 40us; 222us; 41us; 223us; 42us; 224us; 0us; 16401us; 27us; 16403us; 6us; 121us; 8us; 185us; 9us; 188us; 12us; 196us; 14us; 37us; 21us; 198us; 22us; 131us; 32us; 214us; 33us; 204us; 36us; 221us; 38us; 56us; 39us; 220us; 40us; 222us; 41us; 223us; 42us; 224us; 43us; 216us; 44us; 133us; 45us; 139us; 46us; 50us; 48us; 68us; 49us; 96us; 50us; 77us; 52us; 217us; 53us; 127us; 54us; 212us; 55us; 218us; 56us; 213us; 1us; 32768us; 15us; 39us; 0us; 16402us; 27us; 16403us; 6us; 121us; 8us; 185us; 9us; 188us; 12us; 196us; 14us; 37us; 21us; 198us; 22us; 131us; 32us; 214us; 33us; 204us; 36us; 221us; 38us; 56us; 39us; 220us; 40us; 222us; 41us; 223us; 42us; 224us; 43us; 216us; 44us; 133us; 45us; 139us; 46us; 50us; 48us; 68us; 49us; 96us; 50us; 77us; 52us; 217us; 53us; 127us; 54us; 212us; 55us; 218us; 56us; 213us; 0us; 16404us; 1us; 32768us; 18us; 43us; 27us; 16403us; 6us; 121us; 8us; 185us; 9us; 188us; 12us; 196us; 14us; 37us; 21us; 198us; 22us; 131us; 32us; 214us; 33us; 204us; 36us; 221us; 38us; 56us; 39us; 220us; 40us; 222us; 41us; 223us; 42us; 224us; 43us; 216us; 44us; 133us; 45us; 139us; 46us; 50us; 48us; 68us; 49us; 96us; 50us; 77us; 52us; 217us; 53us; 127us; 54us; 212us; 55us; 218us; 56us; 213us; 0us; 16405us; 0us; 16406us; 1us; 16406us; 37us; 65us; 0us; 16407us; 15us; 32768us; 10us; 182us; 18us; 49us; 23us; 191us; 24us; 190us; 25us; 176us; 26us; 177us; 27us; 178us; 28us; 179us; 29us; 180us; 30us; 181us; 31us; 166us; 32us; 167us; 33us; 168us; 34us; 169us; 35us; 170us; 0us; 16408us; 17us; 32768us; 6us; 121us; 8us; 185us; 9us; 188us; 12us; 196us; 18us; 51us; 21us; 198us; 22us; 131us; 32us; 214us; 33us; 204us; 43us; 216us; 44us; 133us; 45us; 139us; 52us; 217us; 53us; 127us; 54us; 212us; 55us; 218us; 56us; 213us; 0us; 16409us; 15us; 32768us; 10us; 182us; 18us; 53us; 23us; 191us; 24us; 190us; 25us; 176us; 26us; 177us; 27us; 178us; 28us; 179us; 29us; 180us; 30us; 181us; 31us; 166us; 32us; 167us; 33us; 168us; 34us; 169us; 35us; 170us; 0us; 16410us; 0us; 16411us; 1us; 32768us; 12us; 57us; 1us; 32768us; 12us; 58us; 16us; 32768us; 6us; 121us; 8us; 185us; 9us; 188us; 12us; 196us; 21us; 198us; 22us; 131us; 32us; 214us; 33us; 204us; 43us; 216us; 44us; 133us; 45us; 139us; 52us; 217us; 53us; 127us; 54us; 212us; 55us; 218us; 56us; 213us; 16us; 32768us; 6us; 121us; 8us; 185us; 9us; 188us; 12us; 196us; 21us; 198us; 22us; 131us; 32us; 214us; 33us; 204us; 43us; 216us; 44us; 133us; 45us; 139us; 52us; 217us; 53us; 127us; 54us; 212us; 55us; 218us; 56us; 213us; 15us; 32768us; 10us; 182us; 13us; 62us; 23us; 191us; 24us; 190us; 25us; 176us; 26us; 177us; 27us; 178us; 28us; 179us; 29us; 180us; 30us; 181us; 31us; 166us; 32us; 167us; 33us; 168us; 34us; 169us; 35us; 170us; 15us; 32768us; 10us; 182us; 13us; 61us; 23us; 191us; 24us; 190us; 25us; 176us; 26us; 177us; 27us; 178us; 28us; 179us; 29us; 180us; 30us; 181us; 31us; 166us; 32us; 167us; 33us; 168us; 34us; 169us; 35us; 170us; 22us; 32768us; 6us; 121us; 8us; 185us; 9us; 188us; 12us; 196us; 14us; 37us; 21us; 198us; 22us; 131us; 32us; 214us; 33us; 204us; 38us; 55us; 43us; 216us; 44us; 133us; 45us; 139us; 46us; 50us; 48us; 67us; 49us; 95us; 50us; 76us; 52us; 217us; 53us; 127us; 54us; 212us; 55us; 218us; 56us; 213us; 22us; 32768us; 6us; 121us; 8us; 185us; 9us; 188us; 12us; 196us; 14us; 37us; 21us; 198us; 22us; 131us; 32us; 214us; 33us; 204us; 38us; 56us; 43us; 216us; 44us; 133us; 45us; 139us; 46us; 50us; 48us; 68us; 49us; 96us; 50us; 77us; 52us; 217us; 53us; 127us; 54us; 212us; 55us; 218us; 56us; 213us; 1us; 32768us; 37us; 64us; 22us; 32768us; 6us; 121us; 8us; 185us; 9us; 188us; 12us; 196us; 14us; 37us; 21us; 198us; 22us; 131us; 32us; 214us; 33us; 204us; 38us; 55us; 43us; 216us; 44us; 133us; 45us; 139us; 46us; 50us; 48us; 67us; 49us; 95us; 50us; 76us; 52us; 217us; 53us; 127us; 54us; 212us; 55us; 218us; 56us; 213us; 22us; 32768us; 6us; 121us; 8us; 185us; 9us; 188us; 12us; 196us; 14us; 37us; 21us; 198us; 22us; 131us; 32us; 214us; 33us; 204us; 38us; 56us; 43us; 216us; 44us; 133us; 45us; 139us; 46us; 50us; 48us; 68us; 49us; 96us; 50us; 77us; 52us; 217us; 53us; 127us; 54us; 212us; 55us; 218us; 56us; 213us; 0us; 16412us; 1us; 32768us; 12us; 69us; 1us; 32768us; 12us; 70us; 16us; 32768us; 6us; 121us; 8us; 185us; 9us; 188us; 12us; 196us; 21us; 198us; 22us; 131us; 32us; 214us; 33us; 204us; 43us; 216us; 44us; 133us; 45us; 139us; 52us; 217us; 53us; 127us; 54us; 212us; 55us; 218us; 56us; 213us; 16us; 32768us; 6us; 121us; 8us; 185us; 9us; 188us; 12us; 196us; 21us; 198us; 22us; 131us; 32us; 214us; 33us; 204us; 43us; 216us; 44us; 133us; 45us; 139us; 52us; 217us; 53us; 127us; 54us; 212us; 55us; 218us; 56us; 213us; 15us; 32768us; 10us; 182us; 13us; 74us; 23us; 191us; 24us; 190us; 25us; 176us; 26us; 177us; 27us; 178us; 28us; 179us; 29us; 180us; 30us; 181us; 31us; 166us; 32us; 167us; 33us; 168us; 34us; 169us; 35us; 170us; 15us; 32768us; 10us; 182us; 13us; 73us; 23us; 191us; 24us; 190us; 25us; 176us; 26us; 177us; 27us; 178us; 28us; 179us; 29us; 180us; 30us; 181us; 31us; 166us; 32us; 167us; 33us; 168us; 34us; 169us; 35us; 170us; 22us; 32768us; 6us; 121us; 8us; 185us; 9us; 188us; 12us; 196us; 14us; 37us; 21us; 198us; 22us; 131us; 32us; 214us; 33us; 204us; 38us; 55us; 43us; 216us; 44us; 133us; 45us; 139us; 46us; 50us; 48us; 67us; 49us; 95us; 50us; 76us; 52us; 217us; 53us; 127us; 54us; 212us; 55us; 218us; 56us; 213us; 22us; 32768us; 6us; 121us; 8us; 185us; 9us; 188us; 12us; 196us; 14us; 37us; 21us; 198us; 22us; 131us; 32us; 214us; 33us; 204us; 38us; 56us; 43us; 216us; 44us; 133us; 45us; 139us; 46us; 50us; 48us; 68us; 49us; 96us; 50us; 77us; 52us; 217us; 53us; 127us; 54us; 212us; 55us; 218us; 56us; 213us; 0us; 16413us; 22us; 32768us; 6us; 121us; 8us; 185us; 9us; 188us; 12us; 196us; 14us; 37us; 21us; 198us; 22us; 131us; 32us; 214us; 33us; 204us; 38us; 55us; 43us; 216us; 44us; 133us; 45us; 139us; 46us; 50us; 48us; 67us; 49us; 95us; 50us; 76us; 52us; 217us; 53us; 127us; 54us; 212us; 55us; 218us; 56us; 213us; 22us; 32768us; 6us; 121us; 8us; 185us; 9us; 188us; 12us; 196us; 14us; 37us; 21us; 198us; 22us; 131us; 32us; 214us; 33us; 204us; 38us; 55us; 43us; 216us; 44us; 133us; 45us; 139us; 46us; 50us; 48us; 67us; 49us; 95us; 50us; 76us; 52us; 217us; 53us; 127us; 54us; 212us; 55us; 218us; 56us; 213us; 2us; 32768us; 48us; 80us; 51us; 90us; 2us; 32768us; 48us; 81us; 51us; 90us; 1us; 32768us; 12us; 82us; 1us; 32768us; 12us; 83us; 16us; 32768us; 6us; 121us; 8us; 185us; 9us; 188us; 12us; 196us; 21us; 198us; 22us; 131us; 32us; 214us; 33us; 204us; 43us; 216us; 44us; 133us; 45us; 139us; 52us; 217us; 53us; 127us; 54us; 212us; 55us; 218us; 56us; 213us; 16us; 32768us; 6us; 121us; 8us; 185us; 9us; 188us; 12us; 196us; 21us; 198us; 22us; 131us; 32us; 214us; 33us; 204us; 43us; 216us; 44us; 133us; 45us; 139us; 52us; 217us; 53us; 127us; 54us; 212us; 55us; 218us; 56us; 213us; 15us; 32768us; 10us; 182us; 13us; 87us; 23us; 191us; 24us; 190us; 25us; 176us; 26us; 177us; 27us; 178us; 28us; 179us; 29us; 180us; 30us; 181us; 31us; 166us; 32us; 167us; 33us; 168us; 34us; 169us; 35us; 170us; 15us; 32768us; 10us; 182us; 13us; 86us; 23us; 191us; 24us; 190us; 25us; 176us; 26us; 177us; 27us; 178us; 28us; 179us; 29us; 180us; 30us; 181us; 31us; 166us; 32us; 167us; 33us; 168us; 34us; 169us; 35us; 170us; 1us; 32768us; 18us; 88us; 1us; 32768us; 18us; 89us; 0us; 16414us; 0us; 16414us; 1us; 32768us; 12us; 91us; 16us; 32768us; 6us; 121us; 8us; 185us; 9us; 188us; 12us; 196us; 21us; 198us; 22us; 131us; 32us; 214us; 33us; 204us; 43us; 216us; 44us; 133us; 45us; 139us; 52us; 217us; 53us; 127us; 54us; 212us; 55us; 218us; 56us; 213us; 15us; 32768us; 10us; 182us; 13us; 93us; 23us; 191us; 24us; 190us; 25us; 176us; 26us; 177us; 27us; 178us; 28us; 179us; 29us; 180us; 30us; 181us; 31us; 166us; 32us; 167us; 33us; 168us; 34us; 169us; 35us; 170us; 1us; 32768us; 18us; 94us; 0us; 16415us; 1us; 32768us; 12us; 97us; 1us; 32768us; 12us; 98us; 16us; 32768us; 6us; 121us; 8us; 185us; 9us; 188us; 12us; 196us; 21us; 198us; 22us; 131us; 32us; 214us; 33us; 204us; 43us; 216us; 44us; 133us; 45us; 139us; 52us; 217us; 53us; 127us; 54us; 212us; 55us; 218us; 56us; 213us; 16us; 32768us; 6us; 121us; 8us; 185us; 9us; 188us; 12us; 196us; 21us; 198us; 22us; 131us; 32us; 214us; 33us; 204us; 43us; 216us; 44us; 133us; 45us; 139us; 52us; 217us; 53us; 127us; 54us; 212us; 55us; 218us; 56us; 213us; 15us; 32768us; 10us; 182us; 18us; 102us; 23us; 191us; 24us; 190us; 25us; 176us; 26us; 177us; 27us; 178us; 28us; 179us; 29us; 180us; 30us; 181us; 31us; 166us; 32us; 167us; 33us; 168us; 34us; 169us; 35us; 170us; 15us; 32768us; 10us; 182us; 18us; 101us; 23us; 191us; 24us; 190us; 25us; 176us; 26us; 177us; 27us; 178us; 28us; 179us; 29us; 180us; 30us; 181us; 31us; 166us; 32us; 167us; 33us; 168us; 34us; 169us; 35us; 170us; 16us; 32768us; 6us; 121us; 8us; 185us; 9us; 188us; 12us; 196us; 21us; 198us; 22us; 131us; 32us; 214us; 33us; 204us; 43us; 216us; 44us; 133us; 45us; 139us; 52us; 217us; 53us; 127us; 54us; 212us; 55us; 218us; 56us; 213us; 16us; 32768us; 6us; 121us; 8us; 185us; 9us; 188us; 12us; 196us; 21us; 198us; 22us; 131us; 32us; 214us; 33us; 204us; 43us; 216us; 44us; 133us; 45us; 139us; 52us; 217us; 53us; 127us; 54us; 212us; 55us; 218us; 56us; 213us; 15us; 32768us; 10us; 182us; 18us; 106us; 23us; 191us; 24us; 190us; 25us; 176us; 26us; 177us; 27us; 178us; 28us; 179us; 29us; 180us; 30us; 181us; 31us; 166us; 32us; 167us; 33us; 168us; 34us; 169us; 35us; 170us; 15us; 32768us; 10us; 182us; 18us; 105us; 23us; 191us; 24us; 190us; 25us; 176us; 26us; 177us; 27us; 178us; 28us; 179us; 29us; 180us; 30us; 181us; 31us; 166us; 32us; 167us; 33us; 168us; 34us; 169us; 35us; 170us; 16us; 32768us; 6us; 121us; 8us; 185us; 9us; 188us; 12us; 196us; 21us; 198us; 22us; 131us; 32us; 214us; 33us; 204us; 43us; 216us; 44us; 133us; 45us; 139us; 52us; 217us; 53us; 127us; 54us; 212us; 55us; 218us; 56us; 213us; 16us; 32768us; 6us; 121us; 8us; 185us; 9us; 188us; 12us; 196us; 21us; 198us; 22us; 131us; 32us; 214us; 33us; 204us; 43us; 216us; 44us; 133us; 45us; 139us; 52us; 217us; 53us; 127us; 54us; 212us; 55us; 218us; 56us; 213us; 15us; 32768us; 10us; 182us; 13us; 110us; 23us; 191us; 24us; 190us; 25us; 176us; 26us; 177us; 27us; 178us; 28us; 179us; 29us; 180us; 30us; 181us; 31us; 166us; 32us; 167us; 33us; 168us; 34us; 169us; 35us; 170us; 15us; 32768us; 10us; 182us; 13us; 109us; 23us; 191us; 24us; 190us; 25us; 176us; 26us; 177us; 27us; 178us; 28us; 179us; 29us; 180us; 30us; 181us; 31us; 166us; 32us; 167us; 33us; 168us; 34us; 169us; 35us; 170us; 22us; 32768us; 6us; 121us; 8us; 185us; 9us; 188us; 12us; 196us; 14us; 37us; 21us; 198us; 22us; 131us; 32us; 214us; 33us; 204us; 38us; 55us; 43us; 216us; 44us; 133us; 45us; 139us; 46us; 50us; 48us; 67us; 49us; 95us; 50us; 76us; 52us; 217us; 53us; 127us; 54us; 212us; 55us; 218us; 56us; 213us; 22us; 32768us; 6us; 121us; 8us; 185us; 9us; 188us; 12us; 196us; 14us; 37us; 21us; 198us; 22us; 131us; 32us; 214us; 33us; 204us; 38us; 55us; 43us; 216us; 44us; 133us; 45us; 139us; 46us; 50us; 48us; 67us; 49us; 95us; 50us; 76us; 52us; 217us; 53us; 127us; 54us; 212us; 55us; 218us; 56us; 213us; 0us; 16416us; 0us; 16416us; 0us; 16417us; 0us; 16418us; 0us; 16419us; 10us; 16422us; 1us; 171us; 2us; 172us; 3us; 173us; 4us; 174us; 5us; 175us; 8us; 184us; 9us; 187us; 13us; 203us; 16us; 207us; 20us; 125us; 9us; 16422us; 1us; 171us; 2us; 172us; 3us; 173us; 4us; 174us; 5us; 175us; 8us; 184us; 9us; 187us; 16us; 207us; 20us; 125us; 0us; 16423us; 1us; 16423us; 13us; 197us; 0us; 16424us; 1us; 32768us; 12us; 122us; 16us; 32768us; 6us; 121us; 8us; 185us; 9us; 188us; 12us; 196us; 21us; 198us; 22us; 131us; 32us; 214us; 33us; 204us; 43us; 216us; 44us; 133us; 45us; 139us; 52us; 217us; 53us; 127us; 54us; 212us; 55us; 218us; 56us; 213us; 15us; 32768us; 10us; 182us; 13us; 124us; 23us; 191us; 24us; 190us; 25us; 176us; 26us; 177us; 27us; 178us; 28us; 179us; 29us; 180us; 30us; 181us; 31us; 166us; 32us; 167us; 33us; 168us; 34us; 169us; 35us; 170us; 0us; 16425us; 16us; 32768us; 6us; 121us; 8us; 185us; 9us; 188us; 12us; 196us; 21us; 198us; 22us; 131us; 32us; 214us; 33us; 204us; 43us; 216us; 44us; 133us; 45us; 139us; 52us; 217us; 53us; 127us; 54us; 212us; 55us; 218us; 56us; 213us; 14us; 16426us; 10us; 182us; 23us; 191us; 24us; 190us; 25us; 176us; 26us; 177us; 27us; 178us; 28us; 179us; 29us; 180us; 30us; 181us; 31us; 166us; 32us; 167us; 33us; 168us; 34us; 169us; 35us; 170us; 1us; 16460us; 12us; 128us; 16us; 16465us; 6us; 121us; 8us; 185us; 9us; 188us; 12us; 196us; 21us; 198us; 22us; 131us; 32us; 214us; 33us; 204us; 43us; 216us; 44us; 133us; 45us; 139us; 52us; 217us; 53us; 127us; 54us; 212us; 55us; 218us; 56us; 213us; 1us; 32768us; 13us; 130us; 0us; 16427us; 16us; 32768us; 6us; 121us; 8us; 185us; 9us; 188us; 12us; 196us; 21us; 198us; 22us; 131us; 32us; 214us; 33us; 204us; 43us; 216us; 44us; 133us; 45us; 139us; 52us; 217us; 53us; 127us; 54us; 212us; 55us; 218us; 56us; 213us; 0us; 16428us; 1us; 32768us; 12us; 134us; 1us; 32768us; 52us; 135us; 1us; 32768us; 19us; 136us; 16us; 32768us; 6us; 121us; 8us; 185us; 9us; 188us; 12us; 196us; 21us; 198us; 22us; 131us; 32us; 214us; 33us; 204us; 43us; 216us; 44us; 133us; 45us; 139us; 52us; 217us; 53us; 127us; 54us; 212us; 55us; 218us; 56us; 213us; 15us; 32768us; 10us; 182us; 13us; 138us; 23us; 191us; 24us; 190us; 25us; 176us; 26us; 177us; 27us; 178us; 28us; 179us; 29us; 180us; 30us; 181us; 31us; 166us; 32us; 167us; 33us; 168us; 34us; 169us; 35us; 170us; 0us; 16429us; 1us; 32768us; 12us; 140us; 3us; 32768us; 12us; 201us; 33us; 204us; 53us; 200us; 2us; 32768us; 13us; 142us; 16us; 207us; 0us; 16430us; 3us; 16431us; 33us; 168us; 34us; 169us; 35us; 170us; 3us; 16432us; 33us; 168us; 34us; 169us; 35us; 170us; 0us; 16433us; 0us; 16434us; 0us; 16435us; 14us; 16436us; 10us; 182us; 23us; 191us; 24us; 190us; 25us; 176us; 26us; 177us; 27us; 178us; 28us; 179us; 29us; 180us; 30us; 181us; 31us; 166us; 32us; 167us; 33us; 168us; 34us; 169us; 35us; 170us; 14us; 16437us; 10us; 182us; 23us; 191us; 24us; 190us; 25us; 176us; 26us; 177us; 27us; 178us; 28us; 179us; 29us; 180us; 30us; 181us; 31us; 166us; 32us; 167us; 33us; 168us; 34us; 169us; 35us; 170us; 14us; 16438us; 10us; 182us; 23us; 191us; 24us; 190us; 25us; 176us; 26us; 177us; 27us; 178us; 28us; 179us; 29us; 180us; 30us; 181us; 31us; 166us; 32us; 167us; 33us; 168us; 34us; 169us; 35us; 170us; 14us; 16439us; 10us; 182us; 23us; 191us; 24us; 190us; 25us; 176us; 26us; 177us; 27us; 178us; 28us; 179us; 29us; 180us; 30us; 181us; 31us; 166us; 32us; 167us; 33us; 168us; 34us; 169us; 35us; 170us; 14us; 16440us; 10us; 182us; 23us; 191us; 24us; 190us; 25us; 176us; 26us; 177us; 27us; 178us; 28us; 179us; 29us; 180us; 30us; 181us; 31us; 166us; 32us; 167us; 33us; 168us; 34us; 169us; 35us; 170us; 9us; 16441us; 27us; 178us; 28us; 179us; 29us; 180us; 30us; 181us; 31us; 166us; 32us; 167us; 33us; 168us; 34us; 169us; 35us; 170us; 9us; 16442us; 27us; 178us; 28us; 179us; 29us; 180us; 30us; 181us; 31us; 166us; 32us; 167us; 33us; 168us; 34us; 169us; 35us; 170us; 9us; 16443us; 27us; 178us; 28us; 179us; 29us; 180us; 30us; 181us; 31us; 166us; 32us; 167us; 33us; 168us; 34us; 169us; 35us; 170us; 9us; 16444us; 27us; 178us; 28us; 179us; 29us; 180us; 30us; 181us; 31us; 166us; 32us; 167us; 33us; 168us; 34us; 169us; 35us; 170us; 9us; 16445us; 27us; 178us; 28us; 179us; 29us; 180us; 30us; 181us; 31us; 166us; 32us; 167us; 33us; 168us; 34us; 169us; 35us; 170us; 9us; 16446us; 27us; 178us; 28us; 179us; 29us; 180us; 30us; 181us; 31us; 166us; 32us; 167us; 33us; 168us; 34us; 169us; 35us; 170us; 15us; 32768us; 10us; 182us; 11us; 183us; 23us; 191us; 24us; 190us; 25us; 176us; 26us; 177us; 27us; 178us; 28us; 179us; 29us; 180us; 30us; 181us; 31us; 166us; 32us; 167us; 33us; 168us; 34us; 169us; 35us; 170us; 14us; 16447us; 10us; 182us; 23us; 191us; 24us; 190us; 25us; 176us; 26us; 177us; 27us; 178us; 28us; 179us; 29us; 180us; 30us; 181us; 31us; 166us; 32us; 167us; 33us; 168us; 34us; 169us; 35us; 170us; 11us; 16452us; 25us; 176us; 26us; 177us; 27us; 178us; 28us; 179us; 29us; 180us; 30us; 181us; 31us; 166us; 32us; 167us; 33us; 168us; 34us; 169us; 35us; 170us; 14us; 32768us; 10us; 182us; 23us; 191us; 24us; 190us; 25us; 176us; 26us; 177us; 27us; 178us; 28us; 179us; 29us; 180us; 30us; 181us; 31us; 166us; 32us; 167us; 33us; 168us; 34us; 169us; 35us; 170us; 12us; 16453us; 24us; 190us; 25us; 176us; 26us; 177us; 27us; 178us; 28us; 179us; 29us; 180us; 30us; 181us; 31us; 166us; 32us; 167us; 33us; 168us; 34us; 169us; 35us; 170us; 15us; 32768us; 10us; 182us; 17us; 208us; 23us; 191us; 24us; 190us; 25us; 176us; 26us; 177us; 27us; 178us; 28us; 179us; 29us; 180us; 30us; 181us; 31us; 166us; 32us; 167us; 33us; 168us; 34us; 169us; 35us; 170us; 15us; 16467us; 10us; 182us; 19us; 210us; 23us; 191us; 24us; 190us; 25us; 176us; 26us; 177us; 27us; 178us; 28us; 179us; 29us; 180us; 30us; 181us; 31us; 166us; 32us; 167us; 33us; 168us; 34us; 169us; 35us; 170us; 16us; 32768us; 6us; 121us; 8us; 185us; 9us; 188us; 12us; 196us; 21us; 198us; 22us; 131us; 32us; 214us; 33us; 204us; 43us; 216us; 44us; 133us; 45us; 139us; 52us; 217us; 53us; 127us; 54us; 212us; 55us; 218us; 56us; 213us; 16us; 32768us; 6us; 121us; 8us; 185us; 9us; 188us; 12us; 196us; 21us; 198us; 22us; 131us; 32us; 214us; 33us; 204us; 43us; 216us; 44us; 133us; 45us; 139us; 52us; 217us; 53us; 127us; 54us; 212us; 55us; 218us; 56us; 213us; 16us; 32768us; 6us; 121us; 8us; 185us; 9us; 188us; 12us; 196us; 21us; 198us; 22us; 131us; 32us; 214us; 33us; 204us; 43us; 216us; 44us; 133us; 45us; 139us; 52us; 217us; 53us; 127us; 54us; 212us; 55us; 218us; 56us; 213us; 16us; 32768us; 6us; 121us; 8us; 185us; 9us; 188us; 12us; 196us; 21us; 198us; 22us; 131us; 32us; 214us; 33us; 204us; 43us; 216us; 44us; 133us; 45us; 139us; 52us; 217us; 53us; 127us; 54us; 212us; 55us; 218us; 56us; 213us; 16us; 32768us; 6us; 121us; 8us; 185us; 9us; 188us; 12us; 196us; 21us; 198us; 22us; 131us; 32us; 214us; 33us; 204us; 43us; 216us; 44us; 133us; 45us; 139us; 52us; 217us; 53us; 127us; 54us; 212us; 55us; 218us; 56us; 213us; 16us; 32768us; 6us; 121us; 8us; 185us; 9us; 188us; 12us; 196us; 21us; 198us; 22us; 131us; 32us; 214us; 33us; 204us; 43us; 216us; 44us; 133us; 45us; 139us; 52us; 217us; 53us; 127us; 54us; 212us; 55us; 218us; 56us; 213us; 16us; 32768us; 6us; 121us; 8us; 185us; 9us; 188us; 12us; 196us; 21us; 198us; 22us; 131us; 32us; 214us; 33us; 204us; 43us; 216us; 44us; 133us; 45us; 139us; 52us; 217us; 53us; 127us; 54us; 212us; 55us; 218us; 56us; 213us; 16us; 32768us; 6us; 121us; 8us; 185us; 9us; 188us; 12us; 196us; 21us; 198us; 22us; 131us; 32us; 214us; 33us; 204us; 43us; 216us; 44us; 133us; 45us; 139us; 52us; 217us; 53us; 127us; 54us; 212us; 55us; 218us; 56us; 213us; 16us; 32768us; 6us; 121us; 8us; 185us; 9us; 188us; 12us; 196us; 21us; 198us; 22us; 131us; 32us; 214us; 33us; 204us; 43us; 216us; 44us; 133us; 45us; 139us; 52us; 217us; 53us; 127us; 54us; 212us; 55us; 218us; 56us; 213us; 16us; 32768us; 6us; 121us; 8us; 185us; 9us; 188us; 12us; 196us; 21us; 198us; 22us; 131us; 32us; 214us; 33us; 204us; 43us; 216us; 44us; 133us; 45us; 139us; 52us; 217us; 53us; 127us; 54us; 212us; 55us; 218us; 56us; 213us; 16us; 32768us; 6us; 121us; 8us; 185us; 9us; 188us; 12us; 196us; 21us; 198us; 22us; 131us; 32us; 214us; 33us; 204us; 43us; 216us; 44us; 133us; 45us; 139us; 52us; 217us; 53us; 127us; 54us; 212us; 55us; 218us; 56us; 213us; 16us; 32768us; 6us; 121us; 8us; 185us; 9us; 188us; 12us; 196us; 21us; 198us; 22us; 131us; 32us; 214us; 33us; 204us; 43us; 216us; 44us; 133us; 45us; 139us; 52us; 217us; 53us; 127us; 54us; 212us; 55us; 218us; 56us; 213us; 16us; 32768us; 6us; 121us; 8us; 185us; 9us; 188us; 12us; 196us; 21us; 198us; 22us; 131us; 32us; 214us; 33us; 204us; 43us; 216us; 44us; 133us; 45us; 139us; 52us; 217us; 53us; 127us; 54us; 212us; 55us; 218us; 56us; 213us; 16us; 32768us; 6us; 121us; 8us; 185us; 9us; 188us; 12us; 196us; 21us; 198us; 22us; 131us; 32us; 214us; 33us; 204us; 43us; 216us; 44us; 133us; 45us; 139us; 52us; 217us; 53us; 127us; 54us; 212us; 55us; 218us; 56us; 213us; 16us; 32768us; 6us; 121us; 8us; 185us; 9us; 188us; 12us; 196us; 21us; 198us; 22us; 131us; 32us; 214us; 33us; 204us; 43us; 216us; 44us; 133us; 45us; 139us; 52us; 217us; 53us; 127us; 54us; 212us; 55us; 218us; 56us; 213us; 16us; 32768us; 6us; 121us; 8us; 185us; 9us; 188us; 12us; 196us; 21us; 198us; 22us; 131us; 32us; 214us; 33us; 204us; 43us; 216us; 44us; 133us; 45us; 139us; 52us; 217us; 53us; 127us; 54us; 212us; 55us; 218us; 56us; 213us; 16us; 32768us; 6us; 121us; 8us; 185us; 9us; 188us; 12us; 196us; 21us; 198us; 22us; 131us; 32us; 214us; 33us; 204us; 43us; 216us; 44us; 133us; 45us; 139us; 52us; 217us; 53us; 127us; 54us; 212us; 55us; 218us; 56us; 213us; 16us; 32768us; 6us; 121us; 8us; 185us; 9us; 188us; 12us; 196us; 21us; 198us; 22us; 131us; 32us; 214us; 33us; 204us; 43us; 216us; 44us; 133us; 45us; 139us; 52us; 217us; 53us; 127us; 54us; 212us; 55us; 218us; 56us; 213us; 0us; 16448us; 3us; 32768us; 12us; 201us; 33us; 204us; 53us; 200us; 1us; 16449us; 16us; 207us; 0us; 16450us; 3us; 32768us; 12us; 201us; 33us; 204us; 53us; 200us; 1us; 16451us; 16us; 207us; 16us; 32768us; 6us; 121us; 8us; 185us; 9us; 188us; 12us; 196us; 21us; 198us; 22us; 131us; 32us; 214us; 33us; 204us; 43us; 216us; 44us; 133us; 45us; 139us; 52us; 217us; 53us; 127us; 54us; 212us; 55us; 218us; 56us; 213us; 16us; 32768us; 6us; 121us; 8us; 185us; 9us; 188us; 12us; 196us; 21us; 198us; 22us; 131us; 32us; 214us; 33us; 204us; 43us; 216us; 44us; 133us; 45us; 139us; 52us; 217us; 53us; 127us; 54us; 212us; 55us; 218us; 56us; 213us; 0us; 16454us; 0us; 16455us; 0us; 16456us; 0us; 16457us; 16us; 32768us; 6us; 121us; 8us; 185us; 9us; 188us; 12us; 196us; 21us; 198us; 22us; 131us; 32us; 214us; 33us; 204us; 43us; 216us; 44us; 133us; 45us; 139us; 52us; 217us; 53us; 127us; 54us; 212us; 55us; 218us; 56us; 213us; 0us; 16458us; 3us; 32768us; 12us; 201us; 33us; 204us; 53us; 200us; 1us; 16459us; 16us; 207us; 0us; 16460us; 3us; 32768us; 12us; 201us; 33us; 204us; 53us; 200us; 2us; 32768us; 13us; 203us; 16us; 207us; 0us; 16461us; 10us; 32768us; 12us; 196us; 21us; 198us; 32us; 214us; 33us; 204us; 43us; 216us; 52us; 217us; 53us; 200us; 54us; 212us; 55us; 218us; 56us; 213us; 1us; 16462us; 16us; 207us; 0us; 16463us; 16us; 32768us; 6us; 121us; 8us; 185us; 9us; 188us; 12us; 196us; 21us; 198us; 22us; 131us; 32us; 214us; 33us; 204us; 43us; 216us; 44us; 133us; 45us; 139us; 52us; 217us; 53us; 127us; 54us; 212us; 55us; 218us; 56us; 213us; 0us; 16464us; 0us; 16466us; 16us; 32768us; 6us; 121us; 8us; 185us; 9us; 188us; 12us; 196us; 21us; 198us; 22us; 131us; 32us; 214us; 33us; 204us; 43us; 216us; 44us; 133us; 45us; 139us; 52us; 217us; 53us; 127us; 54us; 212us; 55us; 218us; 56us; 213us; 0us; 16468us; 0us; 16469us; 0us; 16470us; 2us; 32768us; 55us; 219us; 56us; 215us; 0us; 16471us; 0us; 16472us; 0us; 16473us; 0us; 16474us; 0us; 16475us; 0us; 16476us; 0us; 16477us; 0us; 16478us; 0us; 16479us; 0us; 16480us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 7us; 8us; 10us; 11us; 18us; 19us; 21us; 22us; 23us; 27us; 31us; 33us; 34us; 36us; 40us; 42us; 46us; 49us; 50us; 53us; 54us; 56us; 57us; 59us; 61us; 67us; 69us; 71us; 72us; 78us; 80us; 82us; 83us; 84us; 86us; 92us; 93us; 121us; 123us; 124us; 152us; 153us; 155us; 183us; 184us; 185us; 187us; 188us; 204us; 205us; 223us; 224us; 240us; 241us; 242us; 244us; 246us; 263us; 280us; 296us; 312us; 335us; 358us; 360us; 383us; 406us; 407us; 409us; 411us; 428us; 445us; 461us; 477us; 500us; 523us; 524us; 547us; 570us; 573us; 576us; 578us; 580us; 597us; 614us; 630us; 646us; 648us; 650us; 651us; 652us; 654us; 671us; 687us; 689us; 690us; 692us; 694us; 711us; 728us; 744us; 760us; 777us; 794us; 810us; 826us; 843us; 860us; 876us; 892us; 915us; 938us; 939us; 940us; 941us; 942us; 943us; 954us; 964us; 965us; 967us; 968us; 970us; 987us; 1003us; 1004us; 1021us; 1036us; 1038us; 1055us; 1057us; 1058us; 1075us; 1076us; 1078us; 1080us; 1082us; 1099us; 1115us; 1116us; 1118us; 1122us; 1125us; 1126us; 1130us; 1134us; 1135us; 1136us; 1137us; 1152us; 1167us; 1182us; 1197us; 1212us; 1222us; 1232us; 1242us; 1252us; 1262us; 1272us; 1288us; 1303us; 1315us; 1330us; 1343us; 1359us; 1375us; 1392us; 1409us; 1426us; 1443us; 1460us; 1477us; 1494us; 1511us; 1528us; 1545us; 1562us; 1579us; 1596us; 1613us; 1630us; 1647us; 1664us; 1681us; 1682us; 1686us; 1688us; 1689us; 1693us; 1695us; 1712us; 1729us; 1730us; 1731us; 1732us; 1733us; 1750us; 1751us; 1755us; 1757us; 1758us; 1762us; 1765us; 1766us; 1777us; 1779us; 1780us; 1797us; 1798us; 1799us; 1816us; 1817us; 1818us; 1819us; 1822us; 1823us; 1824us; 1825us; 1826us; 1827us; 1828us; 1829us; 1830us; 1831us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 2us; 0us; 2us; 2us; 1us; 2us; 1us; 2us; 3us; 3us; 4us; 6us; 6us; 0us; 1us; 1us; 3us; 3us; 0us; 2us; 3us; 1us; 1us; 2us; 2us; 3us; 1us; 7us; 5us; 7us; 7us; 9us; 7us; 5us; 5us; 7us; 9us; 1us; 1us; 1us; 4us; 3us; 4us; 2us; 6us; 4us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 5us; 2us; 2us; 2us; 2us; 3us; 3us; 1us; 1us; 1us; 1us; 3us; 2us; 1us; 3us; 2us; 2us; 4us; 0us; 1us; 1us; 3us; 1us; 1us; 2us; 1us; 1us; 1us; 2us; 1us; 1us; 1us; 1us; 1us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 2us; 3us; 3us; 4us; 5us; 5us; 5us; 5us; 5us; 6us; 6us; 7us; 7us; 8us; 8us; 9us; 10us; 10us; 10us; 11us; 11us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 13us; 13us; 13us; 13us; 13us; 14us; 14us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 16us; 16us; 16us; 16us; 16us; 16us; 17us; 17us; 17us; 17us; 17us; 18us; 18us; 19us; 19us; 20us; 21us; 21us; 21us; 22us; 23us; 23us; 24us; 24us; 24us; 24us; 24us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 16385us; 65535us; 16387us; 65535us; 16388us; 16389us; 65535us; 65535us; 65535us; 16391us; 65535us; 65535us; 65535us; 65535us; 65535us; 16393us; 65535us; 16394us; 65535us; 16395us; 65535us; 65535us; 65535us; 65535us; 65535us; 16396us; 65535us; 65535us; 65535us; 16397us; 16399us; 65535us; 65535us; 16401us; 65535us; 65535us; 16402us; 65535us; 16404us; 65535us; 65535us; 16405us; 16406us; 65535us; 16407us; 65535us; 16408us; 65535us; 16409us; 65535us; 16410us; 16411us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16412us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16413us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16414us; 65535us; 65535us; 65535us; 65535us; 65535us; 16415us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16416us; 65535us; 16417us; 16418us; 16419us; 65535us; 65535us; 16423us; 65535us; 16424us; 65535us; 65535us; 65535us; 16425us; 65535us; 65535us; 65535us; 65535us; 65535us; 16427us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16429us; 65535us; 65535us; 65535us; 16430us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16448us; 65535us; 65535us; 16450us; 65535us; 65535us; 65535us; 65535us; 16454us; 16455us; 16456us; 16457us; 65535us; 16458us; 65535us; 65535us; 16460us; 65535us; 65535us; 16461us; 65535us; 65535us; 16463us; 65535us; 16464us; 16466us; 65535us; 16468us; 16469us; 16470us; 65535us; 16471us; 16472us; 16473us; 16474us; 16475us; 16476us; 16477us; 16478us; 16479us; 16480us; |]
let _fsyacc_reductions ()  =    [| 
# 533 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Absyn.program in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startMain));
# 542 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 52 "CPar.fsy"
                                                               Prog _1 
                   )
# 52 "CPar.fsy"
                 : Absyn.program));
# 553 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 57 "CPar.fsy"
                                                               [] 
                   )
# 57 "CPar.fsy"
                 : 'gentype_Topdecs));
# 563 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdec in
            let _2 = parseState.GetInput(2) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 58 "CPar.fsy"
                                                               _1 :: _2 
                   )
# 58 "CPar.fsy"
                 : 'gentype_Topdecs));
# 575 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 62 "CPar.fsy"
                                                               Vardec (fst _1, snd _1) 
                   )
# 62 "CPar.fsy"
                 : 'gentype_Topdec));
# 586 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Fundec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 63 "CPar.fsy"
                                                               _1 
                   )
# 63 "CPar.fsy"
                 : 'gentype_Topdec));
# 597 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 81 "CPar.fsy"
                                                               ((fst _2) _1, snd _2) 
                   )
# 81 "CPar.fsy"
                 : 'gentype_Vardec));
# 609 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 92 "CPar.fsy"
                                                               ((fun t -> t), _1)                      
                   )
# 92 "CPar.fsy"
                 : 'gentype_Vardesc));
# 620 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 100 "CPar.fsy"
                                                               compose1 TypP _2                        
                   )
# 100 "CPar.fsy"
                 : 'gentype_Vardesc));
# 631 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 102 "CPar.fsy"
                                                               _2                                      
                   )
# 102 "CPar.fsy"
                 : 'gentype_Vardesc));
# 642 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 104 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, None)) _1    
                   )
# 104 "CPar.fsy"
                 : 'gentype_Vardesc));
# 653 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            let _3 = parseState.GetInput(3) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 106 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, Some _3)) _1 
                   )
# 106 "CPar.fsy"
                 : 'gentype_Vardesc));
# 665 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 111 "CPar.fsy"
                                                               Fundec(None,     _2, _4, _6) 
                   )
# 111 "CPar.fsy"
                 : 'gentype_Fundec));
# 678 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 113 "CPar.fsy"
                                                               Fundec(Some(_1), _2, _4, _6) 
                   )
# 113 "CPar.fsy"
                 : 'gentype_Fundec));
# 692 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 118 "CPar.fsy"
                                                               [] 
                   )
# 118 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 702 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 119 "CPar.fsy"
                                                               _1 
                   )
# 119 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 713 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 123 "CPar.fsy"
                                                               [_1]     
                   )
# 123 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 724 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 124 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 124 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 736 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 129 "CPar.fsy"
                                                               Block _2 
                   )
# 129 "CPar.fsy"
                 : 'gentype_Block));
# 747 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 133 "CPar.fsy"
                                                               [] 
                   )
# 133 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 757 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Stmt in
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 134 "CPar.fsy"
                                                               Stmt _1 :: _2 
                   )
# 134 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 769 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 135 "CPar.fsy"
                                                               Dec (fst _1, snd _1) :: _3 
                   )
# 135 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 781 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 139 "CPar.fsy"
                                                               _1 
                   )
# 139 "CPar.fsy"
                 : 'gentype_Stmt));
# 792 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 140 "CPar.fsy"
                                                               _1 
                   )
# 140 "CPar.fsy"
                 : 'gentype_Stmt));
# 803 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 144 "CPar.fsy"
                                                               Expr(_1)             
                   )
# 144 "CPar.fsy"
                 : 'gentype_StmtM));
# 814 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 145 "CPar.fsy"
                                                               Return None          
                   )
# 145 "CPar.fsy"
                 : 'gentype_StmtM));
# 824 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 146 "CPar.fsy"
                                                               Return(Some(_2))     
                   )
# 146 "CPar.fsy"
                 : 'gentype_StmtM));
# 835 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 147 "CPar.fsy"
                                                               _1                   
                   )
# 147 "CPar.fsy"
                 : 'gentype_StmtM));
# 846 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 148 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 148 "CPar.fsy"
                 : 'gentype_StmtM));
# 859 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 149 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 149 "CPar.fsy"
                 : 'gentype_StmtM));
# 871 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 150 "CPar.fsy"
                                                               DoWhile(_5, _2)      
                   )
# 150 "CPar.fsy"
                 : 'gentype_StmtM));
# 883 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 151 "CPar.fsy"
                                                               DoUntil(_5, _2)      
                   )
# 151 "CPar.fsy"
                 : 'gentype_StmtM));
# 895 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            let _7 = parseState.GetInput(7) :?> 'gentype_Expr in
            let _9 = parseState.GetInput(9) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 152 "CPar.fsy"
                                                                             For(_3, _5, _7, _9) 
                   )
# 152 "CPar.fsy"
                 : 'gentype_StmtM));
# 909 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 156 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 156 "CPar.fsy"
                 : 'gentype_StmtU));
# 922 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Stmt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 157 "CPar.fsy"
                                                               If(_3, _5, Block []) 
                   )
# 157 "CPar.fsy"
                 : 'gentype_StmtU));
# 934 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 158 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 158 "CPar.fsy"
                 : 'gentype_StmtU));
# 946 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 159 "CPar.fsy"
                                                               DoWhile(_5, _2)      
                   )
# 159 "CPar.fsy"
                 : 'gentype_StmtU));
# 958 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            let _7 = parseState.GetInput(7) :?> 'gentype_Expr in
            let _9 = parseState.GetInput(9) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 160 "CPar.fsy"
                                                                             For(_3, _5, _7, _9) 
                   )
# 160 "CPar.fsy"
                 : 'gentype_StmtU));
# 972 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 164 "CPar.fsy"
                                                               Access _1           
                   )
# 164 "CPar.fsy"
                 : 'gentype_Expr));
# 983 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 165 "CPar.fsy"
                                                               _1                  
                   )
# 165 "CPar.fsy"
                 : 'gentype_Expr));
# 994 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 169 "CPar.fsy"
                                                               _1                  
                   )
# 169 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1005 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 170 "CPar.fsy"
                                                               Sizeof(_3)          
                   )
# 170 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1016 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 171 "CPar.fsy"
                                                               Assign(_1, _3)      
                   )
# 171 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1028 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 172 "CPar.fsy"
                                                               Call(_1, _3)        
                   )
# 172 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1040 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 173 "CPar.fsy"
                                                               Prim1("!", _2)      
                   )
# 173 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1051 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> string in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 174 "CPar.fsy"
                                                               Print(_3, _5)       
                   )
# 174 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1063 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 175 "CPar.fsy"
                                                               Println(_3)         
                   )
# 175 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1074 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 176 "CPar.fsy"
                                                               Prim2("+",  _1, _3) 
                   )
# 176 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1086 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 177 "CPar.fsy"
                                                               Prim2("-",  _1, _3) 
                   )
# 177 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1098 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 178 "CPar.fsy"
                                                               Prim2("*",  _1, _3) 
                   )
# 178 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1110 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 179 "CPar.fsy"
                                                               Prim2("/",  _1, _3) 
                   )
# 179 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1122 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 180 "CPar.fsy"
                                                               Prim2("%",  _1, _3) 
                   )
# 180 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1134 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 181 "CPar.fsy"
                                                               Assign(_1, Prim2("+", Access _1, _3) ) 
                   )
# 181 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1146 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 182 "CPar.fsy"
                                                               Assign(_1, Prim2("-", Access _1, _3) ) 
                   )
# 182 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1158 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 183 "CPar.fsy"
                                                               Assign(_1, Prim2("*", Access _1, _3) ) 
                   )
# 183 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1170 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 184 "CPar.fsy"
                                                               Assign(_1, Prim2("/", Access _1, _3) ) 
                   )
# 184 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1182 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 185 "CPar.fsy"
                                                               Assign(_1, Prim2("%", Access _1, _3) ) 
                   )
# 185 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1194 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 186 "CPar.fsy"
                                                               Prim2("==", _1, _3) 
                   )
# 186 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1206 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 187 "CPar.fsy"
                                                               Prim2("!=", _1, _3) 
                   )
# 187 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1218 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 188 "CPar.fsy"
                                                               Prim2(">",  _1, _3) 
                   )
# 188 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1230 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 189 "CPar.fsy"
                                                               Prim2("<",  _1, _3) 
                   )
# 189 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1242 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 190 "CPar.fsy"
                                                               Prim2(">=", _1, _3) 
                   )
# 190 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1254 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 191 "CPar.fsy"
                                                               Prim2("<=", _1, _3) 
                   )
# 191 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1266 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 192 "CPar.fsy"
                                                               Prim3(_1, _3, _5)   
                   )
# 192 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1279 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 193 "CPar.fsy"
                                                               Assign(_1, Prim2("+",  Access _1, CstI (1))) 
                   )
# 193 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1290 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 194 "CPar.fsy"
                                                               Assign(_2, Prim2("+",  Access _2, CstI (1))) 
                   )
# 194 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1301 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 195 "CPar.fsy"
                                                               Assign(_1, Prim2("-",  Access _1, CstI (1))) 
                   )
# 195 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1312 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 196 "CPar.fsy"
                                                               Assign(_2, Prim2("-",  Access _2, CstI (1))) 
                   )
# 196 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1323 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 197 "CPar.fsy"
                                                               Andalso(_1, _3)     
                   )
# 197 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1335 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 198 "CPar.fsy"
                                                               Orelse(_1, _3)      
                   )
# 198 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1347 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ConstInt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 206 "CPar.fsy"
                                                               CstI _1             
                   )
# 206 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1358 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ConstString in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 207 "CPar.fsy"
                                                               CstS(_1)            
                   )
# 207 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1369 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ConstFloat in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 208 "CPar.fsy"
                                                               CstF(_1)            
                   )
# 208 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1380 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ConstBool in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 209 "CPar.fsy"
                                                               CstB(_1)            
                   )
# 209 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1391 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 210 "CPar.fsy"
                                                               _2                  
                   )
# 210 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1402 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 211 "CPar.fsy"
                                                               Addr _2             
                   )
# 211 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1413 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 215 "CPar.fsy"
                                                               AccVar _1           
                   )
# 215 "CPar.fsy"
                 : 'gentype_Access));
# 1424 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 216 "CPar.fsy"
                                                               _2                  
                   )
# 216 "CPar.fsy"
                 : 'gentype_Access));
# 1435 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 217 "CPar.fsy"
                                                               AccDeref (Access _2)
                   )
# 217 "CPar.fsy"
                 : 'gentype_Access));
# 1446 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 218 "CPar.fsy"
                                                               AccDeref _2         
                   )
# 218 "CPar.fsy"
                 : 'gentype_Access));
# 1457 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 219 "CPar.fsy"
                                                               AccIndex(_1, _3)    
                   )
# 219 "CPar.fsy"
                 : 'gentype_Access));
# 1469 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 223 "CPar.fsy"
                                                               []       
                   )
# 223 "CPar.fsy"
                 : 'gentype_Exprs));
# 1479 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 224 "CPar.fsy"
                                                               _1       
                   )
# 224 "CPar.fsy"
                 : 'gentype_Exprs));
# 1490 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 228 "CPar.fsy"
                                                               [_1]     
                   )
# 228 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1501 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 229 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 229 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1513 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> bool in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 233 "CPar.fsy"
                                                               _1       
                   )
# 233 "CPar.fsy"
                 : 'gentype_ConstBool));
# 1524 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 237 "CPar.fsy"
                                                               _1       
                   )
# 237 "CPar.fsy"
                 : 'gentype_ConstInt));
# 1535 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 238 "CPar.fsy"
                                                               - _2     
                   )
# 238 "CPar.fsy"
                 : 'gentype_ConstInt));
# 1546 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 239 "CPar.fsy"
                                                               -1       
                   )
# 239 "CPar.fsy"
                 : 'gentype_ConstInt));
# 1556 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 243 "CPar.fsy"
                                                               _1       
                   )
# 243 "CPar.fsy"
                 : 'gentype_ConstString));
# 1567 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> float32 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 247 "CPar.fsy"
                                                               _1       
                   )
# 247 "CPar.fsy"
                 : 'gentype_ConstFloat));
# 1578 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> float32 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 248 "CPar.fsy"
                                                               - _2     
                   )
# 248 "CPar.fsy"
                 : 'gentype_ConstFloat));
# 1589 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 252 "CPar.fsy"
                                                               TypI     
                   )
# 252 "CPar.fsy"
                 : 'gentype_Type));
# 1599 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 253 "CPar.fsy"
                                                               TypC     
                   )
# 253 "CPar.fsy"
                 : 'gentype_Type));
# 1609 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 254 "CPar.fsy"
                                                               TypF     
                   )
# 254 "CPar.fsy"
                 : 'gentype_Type));
# 1619 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 255 "CPar.fsy"
                                                               TypB     
                   )
# 255 "CPar.fsy"
                 : 'gentype_Type));
# 1629 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 256 "CPar.fsy"
                                                               TypS     
                   )
# 256 "CPar.fsy"
                 : 'gentype_Type));
|]
# 1640 "CPar.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 60;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let Main lexer lexbuf : Absyn.program =
    engine lexer lexbuf 0 :?> _
